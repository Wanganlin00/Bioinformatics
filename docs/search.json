[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Bioinformatics",
    "section": "",
    "text": "前言\n这是一本关于单细胞分析的笔记，主要是关于这本书《Orchestrating Single-Cell Analysis with Bioconductor》。\n了解更多：Orchestrating Single-Cell Analysis with Bioconductor。\n本书包括五个部分："
  },
  {
    "objectID": "index.html#配置环境",
    "href": "index.html#配置环境",
    "title": "Bioinformatics",
    "section": "配置环境",
    "text": "配置环境\n\nCodeSys.Date()\n#&gt; [1] \"2024-03-08\"\nBiocManager::version()\n#&gt; [1] '3.18'\nsessionInfo()\n#&gt; R version 4.3.2 (2023-10-31 ucrt)\n#&gt; Platform: x86_64-w64-mingw32/x64 (64-bit)\n#&gt; Running under: Windows 10 x64 (build 19045)\n#&gt; \n#&gt; Matrix products: default\n#&gt; \n#&gt; \n#&gt; locale:\n#&gt; [1] LC_COLLATE=Chinese (Simplified)_China.utf8 \n#&gt; [2] LC_CTYPE=Chinese (Simplified)_China.utf8   \n#&gt; [3] LC_MONETARY=Chinese (Simplified)_China.utf8\n#&gt; [4] LC_NUMERIC=C                               \n#&gt; [5] LC_TIME=Chinese (Simplified)_China.utf8    \n#&gt; \n#&gt; time zone: Asia/Shanghai\n#&gt; tzcode source: internal\n#&gt; \n#&gt; attached base packages:\n#&gt; [1] stats     graphics  grDevices utils     datasets  methods   base     \n#&gt; \n#&gt; other attached packages:\n#&gt;  [1] conflicted_1.2.0.9000 BiocManager_1.30.22   patchwork_1.2.0      \n#&gt;  [4] lubridate_1.9.3       forcats_1.0.0         stringr_1.5.1        \n#&gt;  [7] dplyr_1.1.4           purrr_1.0.2           readr_2.1.5          \n#&gt; [10] tidyr_1.3.0           tibble_3.2.1          ggplot2_3.4.4        \n#&gt; [13] tidyverse_2.0.0       writexl_1.4.2         readxl_1.4.3         \n#&gt; \n#&gt; loaded via a namespace (and not attached):\n#&gt;  [1] utf8_1.2.4        generics_0.1.3    stringi_1.8.3     hms_1.1.3        \n#&gt;  [5] digest_0.6.34     magrittr_2.0.3    evaluate_0.23     grid_4.3.2       \n#&gt;  [9] timechange_0.2.0  fastmap_1.1.1     jsonlite_1.8.8    cellranger_1.1.0 \n#&gt; [13] fansi_1.0.6       scales_1.3.0      cli_3.6.2         rlang_1.1.3      \n#&gt; [17] munsell_0.5.0     yaml_2.3.8        withr_2.5.2       cachem_1.0.8     \n#&gt; [21] tools_4.3.2       tzdb_0.4.0        memoise_2.0.1     colorspace_2.1-0 \n#&gt; [25] vctrs_0.6.5       R6_2.5.1          lifecycle_1.0.4   htmlwidgets_1.6.4\n#&gt; [29] pkgconfig_2.0.3   pillar_1.9.0      gtable_0.3.4      glue_1.7.0       \n#&gt; [33] xfun_0.41         tidyselect_1.2.0  rstudioapi_0.15.0 knitr_1.45       \n#&gt; [37] htmltools_0.5.7   rmarkdown_2.25    compiler_4.3.2\ndevtools::session_info()\n#&gt; ─ Session info ───────────────────────────────────────────────────────────────\n#&gt;  setting  value\n#&gt;  version  R version 4.3.2 (2023-10-31 ucrt)\n#&gt;  os       Windows 10 x64 (build 19045)\n#&gt;  system   x86_64, mingw32\n#&gt;  ui       RTerm\n#&gt;  language en\n#&gt;  collate  Chinese (Simplified)_China.utf8\n#&gt;  ctype    Chinese (Simplified)_China.utf8\n#&gt;  tz       Asia/Shanghai\n#&gt;  date     2024-03-08\n#&gt;  pandoc   3.1.1 @ D:/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n#&gt; \n#&gt; ─ Packages ───────────────────────────────────────────────────────────────────\n#&gt;  package     * version    date (UTC) lib source\n#&gt;  BiocManager * 1.30.22    2023-08-08 [1] CRAN (R 4.3.2)\n#&gt;  cachem        1.0.8      2023-05-01 [1] CRAN (R 4.3.2)\n#&gt;  cellranger    1.1.0      2016-07-27 [1] CRAN (R 4.3.2)\n#&gt;  cli           3.6.2      2023-12-11 [1] CRAN (R 4.3.2)\n#&gt;  colorspace    2.1-0      2023-01-23 [1] CRAN (R 4.3.1)\n#&gt;  conflicted  * 1.2.0.9000 2023-11-26 [1] Github (r-lib/conflicted@321d77c)\n#&gt;  devtools      2.4.5      2022-10-11 [1] CRAN (R 4.3.2)\n#&gt;  digest        0.6.34     2024-01-11 [1] CRAN (R 4.3.2)\n#&gt;  dplyr       * 1.1.4      2023-11-17 [1] CRAN (R 4.3.2)\n#&gt;  ellipsis      0.3.2      2021-04-29 [1] CRAN (R 4.3.2)\n#&gt;  evaluate      0.23       2023-11-01 [1] CRAN (R 4.3.2)\n#&gt;  fansi         1.0.6      2023-12-08 [1] CRAN (R 4.3.2)\n#&gt;  fastmap       1.1.1      2023-02-24 [1] CRAN (R 4.3.2)\n#&gt;  forcats     * 1.0.0      2023-01-29 [1] CRAN (R 4.3.2)\n#&gt;  fs            1.6.3      2023-07-20 [1] CRAN (R 4.3.2)\n#&gt;  generics      0.1.3      2022-07-05 [1] CRAN (R 4.3.2)\n#&gt;  ggplot2     * 3.4.4      2023-10-12 [1] CRAN (R 4.3.2)\n#&gt;  glue          1.7.0      2024-01-09 [1] CRAN (R 4.3.2)\n#&gt;  gtable        0.3.4      2023-08-21 [1] CRAN (R 4.3.2)\n#&gt;  hms           1.1.3      2023-03-21 [1] CRAN (R 4.3.2)\n#&gt;  htmltools     0.5.7      2023-11-03 [1] CRAN (R 4.3.2)\n#&gt;  htmlwidgets   1.6.4      2023-12-06 [1] CRAN (R 4.3.2)\n#&gt;  httpuv        1.6.13     2023-12-06 [1] CRAN (R 4.3.2)\n#&gt;  jsonlite      1.8.8      2023-12-04 [1] CRAN (R 4.3.2)\n#&gt;  knitr         1.45       2023-10-30 [1] CRAN (R 4.3.2)\n#&gt;  later         1.3.2      2023-12-06 [1] CRAN (R 4.3.2)\n#&gt;  lifecycle     1.0.4      2023-11-07 [1] CRAN (R 4.3.2)\n#&gt;  lubridate   * 1.9.3      2023-09-27 [1] CRAN (R 4.3.2)\n#&gt;  magrittr      2.0.3      2022-03-30 [1] CRAN (R 4.3.2)\n#&gt;  memoise       2.0.1      2021-11-26 [1] CRAN (R 4.3.2)\n#&gt;  mime          0.12       2021-09-28 [1] CRAN (R 4.3.1)\n#&gt;  miniUI        0.1.1.1    2018-05-18 [1] CRAN (R 4.3.2)\n#&gt;  munsell       0.5.0      2018-06-12 [1] CRAN (R 4.3.2)\n#&gt;  patchwork   * 1.2.0      2024-01-08 [1] CRAN (R 4.3.2)\n#&gt;  pillar        1.9.0      2023-03-22 [1] CRAN (R 4.3.2)\n#&gt;  pkgbuild      1.4.3      2023-12-10 [1] CRAN (R 4.3.2)\n#&gt;  pkgconfig     2.0.3      2019-09-22 [1] CRAN (R 4.3.2)\n#&gt;  pkgload       1.3.4      2024-01-16 [1] CRAN (R 4.3.2)\n#&gt;  profvis       0.3.8      2023-05-02 [1] CRAN (R 4.3.2)\n#&gt;  promises      1.2.1      2023-08-10 [1] CRAN (R 4.3.2)\n#&gt;  purrr       * 1.0.2      2023-08-10 [1] CRAN (R 4.3.2)\n#&gt;  R6            2.5.1      2021-08-19 [1] CRAN (R 4.3.2)\n#&gt;  Rcpp          1.0.12     2024-01-09 [1] CRAN (R 4.3.2)\n#&gt;  readr       * 2.1.5      2024-01-10 [1] CRAN (R 4.3.2)\n#&gt;  readxl      * 1.4.3      2023-07-06 [1] CRAN (R 4.3.2)\n#&gt;  remotes       2.4.2.1    2023-07-18 [1] CRAN (R 4.3.2)\n#&gt;  rlang         1.1.3      2024-01-10 [1] CRAN (R 4.3.2)\n#&gt;  rmarkdown     2.25       2023-09-18 [1] CRAN (R 4.3.2)\n#&gt;  rstudioapi    0.15.0     2023-07-07 [1] CRAN (R 4.3.2)\n#&gt;  scales        1.3.0      2023-11-28 [1] CRAN (R 4.3.2)\n#&gt;  sessioninfo   1.2.2      2021-12-06 [1] CRAN (R 4.3.2)\n#&gt;  shiny         1.8.0      2023-11-17 [1] CRAN (R 4.3.2)\n#&gt;  stringi       1.8.3      2023-12-11 [1] CRAN (R 4.3.2)\n#&gt;  stringr     * 1.5.1      2023-11-14 [1] CRAN (R 4.3.2)\n#&gt;  tibble      * 3.2.1      2023-03-20 [1] CRAN (R 4.3.2)\n#&gt;  tidyr       * 1.3.0      2023-01-24 [1] CRAN (R 4.3.2)\n#&gt;  tidyselect    1.2.0      2022-10-10 [1] CRAN (R 4.3.2)\n#&gt;  tidyverse   * 2.0.0      2023-02-22 [1] CRAN (R 4.3.2)\n#&gt;  timechange    0.2.0      2023-01-11 [1] CRAN (R 4.3.2)\n#&gt;  tzdb          0.4.0      2023-05-12 [1] CRAN (R 4.3.2)\n#&gt;  urlchecker    1.0.1      2021-11-30 [1] CRAN (R 4.3.2)\n#&gt;  usethis       2.2.2      2023-07-06 [1] CRAN (R 4.3.2)\n#&gt;  utf8          1.2.4      2023-10-22 [1] CRAN (R 4.3.2)\n#&gt;  vctrs         0.6.5      2023-12-01 [1] CRAN (R 4.3.2)\n#&gt;  withr         2.5.2      2023-10-30 [1] CRAN (R 4.3.2)\n#&gt;  writexl     * 1.4.2      2023-01-06 [1] CRAN (R 4.3.2)\n#&gt;  xfun          0.41       2023-11-01 [1] CRAN (R 4.3.2)\n#&gt;  xtable        1.8-4      2019-04-21 [1] CRAN (R 4.3.2)\n#&gt;  yaml          2.3.8      2023-12-11 [1] CRAN (R 4.3.2)\n#&gt; \n#&gt;  [1] D:/R-4.3.2/library\n#&gt; \n#&gt; ──────────────────────────────────────────────────────────────────────────────\n\n\n\npackagesBiocManager::install(\"OSCA.intro\")"
  },
  {
    "objectID": "genomics.html",
    "href": "genomics.html",
    "title": "\n1  SummarizeExperiment结构\n",
    "section": "",
    "text": "2 Biostrings包\nDNAstringSet、RNAStringSet、AAStringSet、BStringSet\nclass:ShortReadQ：DNAstringSet、BStringSet\nCode# BiocManager::install(\"Biostrings\") \nlibrary(Biostrings) \ndna_strings &lt;- DNAStringSet(c(\"ATCG\", \"GCAT\", \"ATCGAT\", \"GCTA\")) \ndna_strings\n#&gt; DNAStringSet object of length 4:\n#&gt;     width seq\n#&gt; [1]     4 ATCG\n#&gt; [2]     4 GCAT\n#&gt; [3]     6 ATCGAT\n#&gt; [4]     4 GCTA\n\nrna_strings &lt;- RNAStringSet(c(\"AUCG\", \"GCAU\", \"AUCGAU\", \"GCUA\"))\nrna_strings\n#&gt; RNAStringSet object of length 4:\n#&gt;     width seq\n#&gt; [1]     4 AUCG\n#&gt; [2]     4 GCAU\n#&gt; [3]     6 AUCGAU\n#&gt; [4]     4 GCUA\n\nprotein_strings &lt;- AAStringSet(c(\"MATH\", \"GCAU\", \"MATHMATH\", \"CUMA\"))\nprotein_strings\n#&gt; AAStringSet object of length 4:\n#&gt;     width seq\n#&gt; [1]     4 MATH\n#&gt; [2]     4 GCAU\n#&gt; [3]     8 MATHMATH\n#&gt; [4]     4 CUMA\n\n# 二进制字符串存储 如seq_id、quality\nbinary_strings &lt;- BStringSet(c(\"ERCC010101\", \"CRCC110011\", \"101010\", \"111000\"))\nbinary_strings\n#&gt; BStringSet object of length 4:\n#&gt;     width seq\n#&gt; [1]    10 ERCC010101\n#&gt; [2]    10 CRCC110011\n#&gt; [3]     6 101010\n#&gt; [4]     6 111000\nCodetropical=c(\"darkorange\",\"dodgerblue\",\"hotpink\",\"limegreen\",\"yellow\")\npalette(tropical)\npar(pch=16)\nCodelibrary(goseq)\nlibrary(DESeq2)\nhead(supportedGenomes())\n\n\n\n\n\n\n\n\n\n\n\n\n\ndb\nspecies\ndate\nname\nAvailableGeneIDs\n\n\n\n3\nanoCar1\nLizard\nFeb. 2007\nBroad Institute AnoCar (1.0)\nensGene,genscan,xenoRefGene\n\n\n5\nanoGam1\nA. gambiae\nFeb. 2003\nIAGEC v.MOZ2\nensGene,geneid,genscan\n\n\n7\napiMel1\nA. mellifera\nJuly 2004\nBaylor HGSC Amel_1.2\ngenscan\n\n\n8\napiMel2\nA. mellifera\nJan. 2005\nBaylor HGSC Amel_2.0\nensGene,geneid,genscan\n\n\n9\naplCal1\nSea hare\nSept. 2008\nBroad v. Aplcal2.0\nxenoRefGene\n\n\n14\nbosTau2\nCow\nMar. 2005\nBaylor Btau_2.0\ngeneSymbol,geneid,genscan,refGene,sgpGene\n\n\n\n\n\nCodehead(supportedGeneIDs())\n#&gt; Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'head': attempt to set an attribute on NULL\ndata(\"genes\")\nsum(is.na(genes))\n#&gt; [1] 0\npwf &lt;- nullp(genes,\"hg19\",\"ensGene\")\n\n\n\nCode\n###\nGO.wall &lt;- goseq(pwf,\"hg19\",\"ensGene\")\nhead(GO.wall)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncategory\nover_represented_pvalue\nunder_represented_pvalue\nnumDEInCat\nnumInCat\nterm\nontology\n\n\n\n2492\nGO:0005737\n0e+00\n1\n2116\n9315\ncytoplasm\nCC\n\n\n126\nGO:0000278\n0e+00\n1\n236\n801\nmitotic cell cycle\nBP\n\n\n9110\nGO:0035556\n1e-07\n1\n532\n2016\nintracellular signal transduction\nBP\n\n\n10676\nGO:0044281\n2e-07\n1\n370\n1439\nsmall molecule metabolic process\nBP\n\n\n3168\nGO:0006793\n2e-07\n1\n513\n1994\nphosphorus metabolic process\nBP\n\n\n12736\nGO:0051301\n5e-07\n1\n167\n554\ncell division\nBP\n\n\n\n\n\nCode\n###\nGO.MF &lt;- goseq(pwf,\"hg19\",\"ensGene\",test.cats = c(\"GO:MF\"))\nhead(GO.MF)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncategory\nover_represented_pvalue\nunder_represented_pvalue\nnumDEInCat\nnumInCat\nterm\nontology\n\n\n\n1009\nGO:0005198\n0.0001038\n0.9999320\n136\n519\nstructural molecule activity\nMF\n\n\n1172\nGO:0008092\n0.0001223\n0.9999120\n226\n817\ncytoskeletal protein binding\nMF\n\n\n2271\nGO:0030215\n0.0002453\n0.9999655\n11\n17\nsemaphorin receptor binding\nMF\n\n\n744\nGO:0004725\n0.0003701\n0.9998529\n30\n75\nprotein tyrosine phosphatase activity\nMF\n\n\n224\nGO:0003735\n0.0004000\n0.9998061\n40\n155\nstructural constituent of ribosome\nMF\n\n\n2557\nGO:0032934\n0.0006870\n0.9997684\n21\n49\nsterol binding\nMF\nCodelibrary(MatrixEQTL)\npath &lt;- find.package(\"MatrixEQTL\") \n### 复制data到当前工作目录\nexpr &lt;- read.table(\"data/GE.txt\",sep = \"\\t\",header = T,row.names = 1)\nexpr\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSam_01\nSam_02\nSam_03\nSam_04\nSam_05\nSam_06\nSam_07\nSam_08\nSam_09\nSam_10\nSam_11\nSam_12\nSam_13\nSam_14\nSam_15\nSam_16\n\n\n\nGene_01\n4.91\n4.63\n5.18\n5.07\n5.74\n5.09\n5.31\n5.29\n4.73\n5.72\n4.75\n4.54\n5.01\n5.03\n4.84\n4.44\n\n\nGene_02\n13.78\n13.14\n13.18\n13.04\n12.85\n13.07\n13.09\n12.83\n14.94\n13.86\n15.26\n14.73\n14.08\n14.33\n14.72\n14.97\n\n\nGene_03\n12.06\n12.29\n13.07\n13.65\n13.86\n12.84\n12.29\n13.03\n13.13\n14.93\n12.40\n13.38\n13.70\n14.49\n14.14\n13.35\n\n\nGene_04\n11.63\n11.88\n12.74\n12.66\n13.16\n11.99\n11.97\n12.81\n11.74\n13.29\n10.88\n11.37\n12.09\n12.50\n11.40\n11.45\n\n\nGene_05\n14.72\n14.66\n14.63\n15.91\n15.46\n14.74\n15.17\n15.01\n14.05\n14.90\n12.96\n13.56\n14.06\n14.44\n14.12\n13.76\n\n\nGene_06\n12.29\n12.23\n12.47\n13.21\n12.63\n12.18\n12.44\n12.45\n13.22\n12.70\n12.93\n12.84\n13.20\n13.19\n12.64\n12.80\n\n\nGene_07\n12.56\n12.71\n12.49\n13.41\n13.60\n12.35\n12.27\n13.42\n14.73\n15.47\n13.85\n14.31\n15.25\n15.55\n14.90\n14.04\n\n\nGene_08\n12.27\n12.58\n12.61\n13.02\n12.86\n12.32\n12.30\n13.19\n15.21\n14.60\n14.72\n14.56\n14.98\n14.92\n14.53\n14.72\n\n\nGene_09\n9.82\n9.29\n8.95\n8.18\n8.11\n9.43\n9.17\n9.25\n10.95\n9.82\n12.60\n11.99\n11.20\n10.31\n11.13\n11.69\n\n\nGene_10\n14.24\n14.52\n14.62\n13.65\n13.46\n14.04\n13.97\n13.73\n12.29\n12.01\n13.47\n13.30\n12.34\n12.23\n12.80\n12.47\n\n\n\n\n\nCode\nsnp &lt;- read.table(\"data/SNP.txt\",sep = \"\\t\",header = T,row.names = 1)\nsnp\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSam_01\nSam_02\nSam_03\nSam_04\nSam_05\nSam_06\nSam_07\nSam_08\nSam_09\nSam_10\nSam_11\nSam_12\nSam_13\nSam_14\nSam_15\nSam_16\n\n\n\nSnp_01\n2\n0\n2\n0\n2\n1\n2\n1\n1\n1\n2\n2\n1\n2\n2\n1\n\n\nSnp_02\n0\n1\n1\n2\n2\n1\n0\n0\n0\n1\n1\n1\n1\n0\n1\n1\n\n\nSnp_03\n1\n0\n1\n0\n1\n1\n1\n1\n0\n1\n1\n0\n1\n1\n1\n2\n\n\nSnp_04\n0\n1\n2\n2\n2\n1\n1\n0\n0\n0\n1\n2\n1\n1\n1\n0\n\n\nSnp_05\n1\n1\n2\n1\n1\n2\n1\n1\n0\n1\n1\n2\n0\n1\n2\n1\n\n\nSnp_06\n2\n2\n2\n1\n1\n0\n1\n0\n2\n1\n1\n1\n2\n0\n2\n1\n\n\nSnp_07\n1\n1\n2\n2\n0\n1\n1\n1\n1\n0\n2\n2\n0\n1\n1\n1\n\n\nSnp_08\n1\n0\n1\n0\n1\n0\n0\n1\n1\n1\n0\n2\n0\n1\n1\n1\n\n\nSnp_09\n2\n1\n2\n2\n0\n1\n1\n0\n2\n1\n1\n0\n1\n1\n0\n0\n\n\nSnp_10\n1\n1\n0\n0\n0\n2\n2\n1\n1\n2\n1\n1\n1\n1\n1\n0\n\n\nSnp_11\n2\n2\n2\n0\n2\n1\n1\n2\n1\n2\n0\n1\n0\n1\n1\n2\n\n\nSnp_12\n1\n1\n2\n2\n2\n1\n1\n1\n1\n0\n2\n0\n1\n1\n0\n2\n\n\nSnp_13\n0\n1\n1\n1\n1\n1\n2\n1\n2\n2\n0\n0\n0\n1\n1\n1\n\n\nSnp_14\n0\n0\n1\n0\n1\n2\n2\n2\n1\n1\n1\n0\n1\n0\n1\n0\n\n\nSnp_15\n1\n2\n1\n2\n2\n1\n2\n1\n1\n2\n1\n1\n1\n2\n0\n2\n\n\n\n\n\nCode\ncovar &lt;- read.table(\"data/Covariates.txt\",sep = \"\\t\",header = T,row.names = 1)\ncovar\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSam_01\nSam_02\nSam_03\nSam_04\nSam_05\nSam_06\nSam_07\nSam_08\nSam_09\nSam_10\nSam_11\nSam_12\nSam_13\nSam_14\nSam_15\nSam_16\n\n\n\ngender\n0\n0\n0\n0\n0\n0\n0\n0\n1\n1\n1\n1\n1\n1\n1\n1\n\n\nage\n36\n40\n46\n65\n69\n43\n40\n54\n44\n70\n24\n34\n55\n62\n48\n40\nCodee1 &lt;- as.numeric(expr[1,])\ns1 &lt;- as.numeric(snp[1,])\ne1\n#&gt;  [1] 4.91 4.63 5.18 5.07 5.74 5.09 5.31 5.29 4.73 5.72 4.75 4.54 5.01 5.03 4.84\n#&gt; [16] 4.44\ns1\n#&gt;  [1] 2 0 2 0 2 1 2 1 1 1 2 2 1 2 2 1\nlm1 &lt;- lm(e1~s1)\nlibrary(broom)\ntidy(lm1)\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n(Intercept)\n4.929677\n0.2137508\n23.0627348\n0.0000000\n\n\ns1\n0.063871\n0.1386998\n0.4604979\n0.6522304\n\n\n\n\n\nCodeplot(e1 ~ jitter(s1),col=s1+1,xaxt=\"n\",xlab=\"Genetype\",ylab=\"Expression\",pch=16)\naxis(1,at=c(0,2,labels=c(\"AA\",\"Aa\",\"aa\")))\nlines(lm1$fitted.values~s1,type=\"b\",pch=15,col=\"darkgrey\")\nCode### 设置参数\npOutputThreshold &lt;- 1e-2\nerrorCovariance &lt;- numeric()\nuseModel &lt;- modelLINEAR\n\n### SNP\nsnp &lt;- SlicedData$new()\nsnp$fileDelimiter &lt;- \"\\t\"\nsnp$fileOmitCharacters &lt;- \"NA\"\nsnp$fileSkipRows &lt;- 1              # labels\nsnp$fileSkipColumns &lt;- 1\nsnp$fileSliceSize &lt;- 2000         # nrows\nsnp$LoadFile(\"data/SNP.txt\")\nsnp\n#&gt; SlicedData object. For more information type: ?SlicedData\n#&gt; Number of columns: 16 \n#&gt; Number of rows: 15 \n#&gt; Data is stored in 1 slices\n#&gt; Top left corner of the first slice (up to 10x10):\n#&gt;        Sam_01 Sam_02 Sam_03 Sam_04 Sam_05 Sam_06 Sam_07 Sam_08 Sam_09 Sam_10\n#&gt; Snp_01      2      0      2      0      2      1      2      1      1      1\n#&gt; Snp_02      0      1      1      2      2      1      0      0      0      1\n#&gt; Snp_03      1      0      1      0      1      1      1      1      0      1\n#&gt; Snp_04      0      1      2      2      2      1      1      0      0      0\n#&gt; Snp_05      1      1      2      1      1      2      1      1      0      1\n#&gt; Snp_06      2      2      2      1      1      0      1      0      2      1\n#&gt; Snp_07      1      1      2      2      0      1      1      1      1      0\n#&gt; Snp_08      1      0      1      0      1      0      0      1      1      1\n#&gt; Snp_09      2      1      2      2      0      1      1      0      2      1\n#&gt; Snp_10      1      1      0      0      0      2      2      1      1      2\n\n### gene\ngene &lt;- SlicedData$new()\ngene$fileDelimiter &lt;- \"\\t\"\ngene$fileOmitCharacters &lt;- \"NA\"\ngene$fileSkipRows &lt;- 1              # labels\ngene$fileSkipColumns &lt;- 1\ngene$fileSliceSize &lt;- 2000         # nrows\ngene$LoadFile(\"data/GE.txt\")\ngene\n#&gt; SlicedData object. For more information type: ?SlicedData\n#&gt; Number of columns: 16 \n#&gt; Number of rows: 10 \n#&gt; Data is stored in 1 slices\n#&gt; Top left corner of the first slice (up to 10x10):\n#&gt;         Sam_01 Sam_02 Sam_03 Sam_04 Sam_05 Sam_06 Sam_07 Sam_08 Sam_09 Sam_10\n#&gt; Gene_01   4.91   4.63   5.18   5.07   5.74   5.09   5.31   5.29   4.73   5.72\n#&gt; Gene_02  13.78  13.14  13.18  13.04  12.85  13.07  13.09  12.83  14.94  13.86\n#&gt; Gene_03  12.06  12.29  13.07  13.65  13.86  12.84  12.29  13.03  13.13  14.93\n#&gt; Gene_04  11.63  11.88  12.74  12.66  13.16  11.99  11.97  12.81  11.74  13.29\n#&gt; Gene_05  14.72  14.66  14.63  15.91  15.46  14.74  15.17  15.01  14.05  14.90\n#&gt; Gene_06  12.29  12.23  12.47  13.21  12.63  12.18  12.44  12.45  13.22  12.70\n#&gt; Gene_07  12.56  12.71  12.49  13.41  13.60  12.35  12.27  13.42  14.73  15.47\n#&gt; Gene_08  12.27  12.58  12.61  13.02  12.86  12.32  12.30  13.19  15.21  14.60\n#&gt; Gene_09   9.82   9.29   8.95   8.18   8.11   9.43   9.17   9.25  10.95   9.82\n#&gt; Gene_10  14.24  14.52  14.62  13.65  13.46  14.04  13.97  13.73  12.29  12.01\n\n###\ncovar &lt;- SlicedData$new()\nCodeeqtl &lt;- Matrix_eQTL_engine(\n  snps = snp,\n  gene = gene,\n  cvrt = covar,\n  output_file_name = NULL,\n  pvOutputThreshold = pOutputThreshold,\n  useModel = useModel,\n  errorCovariance = errorCovariance,\n  verbose = T,\n  pvalue.hist = T,\n  min.pv.by.genesnp = F,\n  noFDRsaveMemory = F\n)\nCodeeqtl$all\n#&gt; $ntests\n#&gt; [1] 150\n#&gt; \n#&gt; $neqtls\n#&gt; [1] 1\n#&gt; \n#&gt; $eqtls\n#&gt;     snps    gene statistic     pvalue FDR       beta\n#&gt; 1 Snp_11 Gene_06 -3.007106 0.00941791   1 -0.2916667\n#&gt; \n#&gt; $hist.bins\n#&gt;   [1] 0.00 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.10 0.11 0.12 0.13 0.14\n#&gt;  [16] 0.15 0.16 0.17 0.18 0.19 0.20 0.21 0.22 0.23 0.24 0.25 0.26 0.27 0.28 0.29\n#&gt;  [31] 0.30 0.31 0.32 0.33 0.34 0.35 0.36 0.37 0.38 0.39 0.40 0.41 0.42 0.43 0.44\n#&gt;  [46] 0.45 0.46 0.47 0.48 0.49 0.50 0.51 0.52 0.53 0.54 0.55 0.56 0.57 0.58 0.59\n#&gt;  [61] 0.60 0.61 0.62 0.63 0.64 0.65 0.66 0.67 0.68 0.69 0.70 0.71 0.72 0.73 0.74\n#&gt;  [76] 0.75 0.76 0.77 0.78 0.79 0.80 0.81 0.82 0.83 0.84 0.85 0.86 0.87 0.88 0.89\n#&gt;  [91] 0.90 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.00\n#&gt; \n#&gt; $hist.counts\n#&gt;   [1] 1 0 0 0 3 0 0 2 3 1 2 1 2 1 0 0 2 3 2 2 2 1 2 1 2 1 1 1 1 0 3 6 0 2 3 2 3\n#&gt;  [38] 2 1 2 2 0 2 1 2 3 3 0 4 1 1 3 2 1 0 1 0 0 2 0 1 1 3 4 0 1 1 1 2 2 1 1 1 1\n#&gt;  [75] 1 2 2 2 3 2 2 1 2 2 2 1 2 0 0 1 2 1 2 1 1 1 3 2 0 3\neqtl$all$eqtls\n\n\n\n\nsnps\ngene\nstatistic\npvalue\nFDR\nbeta\n\n\nSnp_11\nGene_06\n-3.007106\n0.0094179\n1\n-0.2916667\n\n\n\n\nCodeplot(eqtl)"
  },
  {
    "objectID": "genomics.html#计数矩阵",
    "href": "genomics.html#计数矩阵",
    "title": "\n1  SummarizeExperiment结构\n",
    "section": "\n1.1 计数矩阵",
    "text": "1.1 计数矩阵\n\nCodeassay(se,1)[1:6,]\n#&gt;                 SRR1039508 SRR1039509 SRR1039512 SRR1039513 SRR1039516\n#&gt; ENSG00000000003        679        448        873        408       1138\n#&gt; ENSG00000000005          0          0          0          0          0\n#&gt; ENSG00000000419        467        515        621        365        587\n#&gt; ENSG00000000457        260        211        263        164        245\n#&gt; ENSG00000000460         60         55         40         35         78\n#&gt; ENSG00000000938          0          0          2          0          1\n#&gt;                 SRR1039517 SRR1039520 SRR1039521\n#&gt; ENSG00000000003       1047        770        572\n#&gt; ENSG00000000005          0          0          0\n#&gt; ENSG00000000419        799        417        508\n#&gt; ENSG00000000457        331        233        229\n#&gt; ENSG00000000460         63         76         60\n#&gt; ENSG00000000938          0          0          0\nassays(se)$counts[1:6,]\n#&gt;                 SRR1039508 SRR1039509 SRR1039512 SRR1039513 SRR1039516\n#&gt; ENSG00000000003        679        448        873        408       1138\n#&gt; ENSG00000000005          0          0          0          0          0\n#&gt; ENSG00000000419        467        515        621        365        587\n#&gt; ENSG00000000457        260        211        263        164        245\n#&gt; ENSG00000000460         60         55         40         35         78\n#&gt; ENSG00000000938          0          0          2          0          1\n#&gt;                 SRR1039517 SRR1039520 SRR1039521\n#&gt; ENSG00000000003       1047        770        572\n#&gt; ENSG00000000005          0          0          0\n#&gt; ENSG00000000419        799        417        508\n#&gt; ENSG00000000457        331        233        229\n#&gt; ENSG00000000460         63         76         60\n#&gt; ENSG00000000938          0          0          0"
  },
  {
    "objectID": "genomics.html#基因元数据",
    "href": "genomics.html#基因元数据",
    "title": "\n1  SummarizeExperiment结构\n",
    "section": "\n1.2 基因元数据",
    "text": "1.2 基因元数据\n\nCoderowData(se)\n#&gt; DataFrame with 63677 rows and 10 columns\n#&gt;                         gene_id     gene_name  entrezid   gene_biotype\n#&gt;                     &lt;character&gt;   &lt;character&gt; &lt;integer&gt;    &lt;character&gt;\n#&gt; ENSG00000000003 ENSG00000000003        TSPAN6        NA protein_coding\n#&gt; ENSG00000000005 ENSG00000000005          TNMD        NA protein_coding\n#&gt; ENSG00000000419 ENSG00000000419          DPM1        NA protein_coding\n#&gt; ENSG00000000457 ENSG00000000457         SCYL3        NA protein_coding\n#&gt; ENSG00000000460 ENSG00000000460      C1orf112        NA protein_coding\n#&gt; ...                         ...           ...       ...            ...\n#&gt; ENSG00000273489 ENSG00000273489 RP11-180C16.1        NA      antisense\n#&gt; ENSG00000273490 ENSG00000273490        TSEN34        NA protein_coding\n#&gt; ENSG00000273491 ENSG00000273491  RP11-138A9.2        NA        lincRNA\n#&gt; ENSG00000273492 ENSG00000273492    AP000230.1        NA        lincRNA\n#&gt; ENSG00000273493 ENSG00000273493  RP11-80H18.4        NA        lincRNA\n#&gt;                 gene_seq_start gene_seq_end              seq_name seq_strand\n#&gt;                      &lt;integer&gt;    &lt;integer&gt;           &lt;character&gt;  &lt;integer&gt;\n#&gt; ENSG00000000003       99883667     99894988                     X         -1\n#&gt; ENSG00000000005       99839799     99854882                     X          1\n#&gt; ENSG00000000419       49551404     49575092                    20         -1\n#&gt; ENSG00000000457      169818772    169863408                     1         -1\n#&gt; ENSG00000000460      169631245    169823221                     1          1\n#&gt; ...                        ...          ...                   ...        ...\n#&gt; ENSG00000273489      131178723    131182453                     7         -1\n#&gt; ENSG00000273490       54693789     54697585 HSCHR19LRC_LRC_J_CTG1          1\n#&gt; ENSG00000273491      130600118    130603315          HG1308_PATCH          1\n#&gt; ENSG00000273492       27543189     27589700                    21          1\n#&gt; ENSG00000273493       58315692     58315845                     3          1\n#&gt;                 seq_coord_system        symbol\n#&gt;                        &lt;integer&gt;   &lt;character&gt;\n#&gt; ENSG00000000003               NA        TSPAN6\n#&gt; ENSG00000000005               NA          TNMD\n#&gt; ENSG00000000419               NA          DPM1\n#&gt; ENSG00000000457               NA         SCYL3\n#&gt; ENSG00000000460               NA      C1orf112\n#&gt; ...                          ...           ...\n#&gt; ENSG00000273489               NA RP11-180C16.1\n#&gt; ENSG00000273490               NA        TSEN34\n#&gt; ENSG00000273491               NA  RP11-138A9.2\n#&gt; ENSG00000273492               NA    AP000230.1\n#&gt; ENSG00000273493               NA  RP11-80H18.4"
  },
  {
    "objectID": "genomics.html#样本元数据",
    "href": "genomics.html#样本元数据",
    "title": "\n1  SummarizeExperiment结构\n",
    "section": "\n1.3 样本元数据",
    "text": "1.3 样本元数据\n\nCodecolData(se)\n#&gt; DataFrame with 8 rows and 9 columns\n#&gt;            SampleName     cell      dex    albut        Run avgLength\n#&gt;              &lt;factor&gt; &lt;factor&gt; &lt;factor&gt; &lt;factor&gt;   &lt;factor&gt; &lt;integer&gt;\n#&gt; SRR1039508 GSM1275862  N61311     untrt    untrt SRR1039508       126\n#&gt; SRR1039509 GSM1275863  N61311     trt      untrt SRR1039509       126\n#&gt; SRR1039512 GSM1275866  N052611    untrt    untrt SRR1039512       126\n#&gt; SRR1039513 GSM1275867  N052611    trt      untrt SRR1039513        87\n#&gt; SRR1039516 GSM1275870  N080611    untrt    untrt SRR1039516       120\n#&gt; SRR1039517 GSM1275871  N080611    trt      untrt SRR1039517       126\n#&gt; SRR1039520 GSM1275874  N061011    untrt    untrt SRR1039520       101\n#&gt; SRR1039521 GSM1275875  N061011    trt      untrt SRR1039521        98\n#&gt;            Experiment    Sample    BioSample\n#&gt;              &lt;factor&gt;  &lt;factor&gt;     &lt;factor&gt;\n#&gt; SRR1039508  SRX384345 SRS508568 SAMN02422669\n#&gt; SRR1039509  SRX384346 SRS508567 SAMN02422675\n#&gt; SRR1039512  SRX384349 SRS508571 SAMN02422678\n#&gt; SRR1039513  SRX384350 SRS508572 SAMN02422670\n#&gt; SRR1039516  SRX384353 SRS508575 SAMN02422682\n#&gt; SRR1039517  SRX384354 SRS508576 SAMN02422673\n#&gt; SRR1039520  SRX384357 SRS508579 SAMN02422683\n#&gt; SRR1039521  SRX384358 SRS508580 SAMN02422677\n\nse[,se$dex==\"trt\"]\n#&gt; class: RangedSummarizedExperiment \n#&gt; dim: 63677 4 \n#&gt; metadata(1): ''\n#&gt; assays(1): counts\n#&gt; rownames(63677): ENSG00000000003 ENSG00000000005 ... ENSG00000273492\n#&gt;   ENSG00000273493\n#&gt; rowData names(10): gene_id gene_name ... seq_coord_system symbol\n#&gt; colnames(4): SRR1039509 SRR1039513 SRR1039517 SRR1039521\n#&gt; colData names(9): SampleName cell ... Sample BioSample\ncolData(se[,se$dex==\"trt\"])\n#&gt; DataFrame with 4 rows and 9 columns\n#&gt;            SampleName     cell      dex    albut        Run avgLength\n#&gt;              &lt;factor&gt; &lt;factor&gt; &lt;factor&gt; &lt;factor&gt;   &lt;factor&gt; &lt;integer&gt;\n#&gt; SRR1039509 GSM1275863  N61311       trt    untrt SRR1039509       126\n#&gt; SRR1039513 GSM1275867  N052611      trt    untrt SRR1039513        87\n#&gt; SRR1039517 GSM1275871  N080611      trt    untrt SRR1039517       126\n#&gt; SRR1039521 GSM1275875  N061011      trt    untrt SRR1039521        98\n#&gt;            Experiment    Sample    BioSample\n#&gt;              &lt;factor&gt;  &lt;factor&gt;     &lt;factor&gt;\n#&gt; SRR1039509  SRX384346 SRS508567 SAMN02422675\n#&gt; SRR1039513  SRX384350 SRS508572 SAMN02422670\n#&gt; SRR1039517  SRX384354 SRS508576 SAMN02422673\n#&gt; SRR1039521  SRX384358 SRS508580 SAMN02422677"
  },
  {
    "objectID": "genomics.html#元数据",
    "href": "genomics.html#元数据",
    "title": "\n1  SummarizeExperiment结构\n",
    "section": "\n1.4 元数据",
    "text": "1.4 元数据\n\nCodemetadata(se)\n#&gt; [[1]]\n#&gt; Experiment data\n#&gt;   Experimenter name: Himes BE \n#&gt;   Laboratory: NA \n#&gt;   Contact information:  \n#&gt;   Title: RNA-Seq transcriptome profiling identifies CRISPLD2 as a glucocorticoid responsive gene that modulates cytokine function in airway smooth muscle cells. \n#&gt;   URL: http://www.ncbi.nlm.nih.gov/pubmed/24926665 \n#&gt;   PMIDs: 24926665 \n#&gt; \n#&gt;   Abstract: A 226 word abstract is available. Use 'abstract' method."
  },
  {
    "objectID": "genomics.html#建立summarizedexperiment",
    "href": "genomics.html#建立summarizedexperiment",
    "title": "\n1  SummarizeExperiment结构\n",
    "section": "\n1.5 建立SummarizedExperiment",
    "text": "1.5 建立SummarizedExperiment\n\nCode# 计数矩阵\nnrows &lt;- 200\nncols &lt;- 6\ncounts &lt;- matrix(runif(nrows * ncols, 1, 1e4), nrows)\n\n# 基因元数据\nrowData &lt;- GRanges(seqnames = rep(c(\"chr1\", \"chr2\"), c(50, 150)),\n                   ranges = IRanges(floor(runif(200, 1e5, 1e6)), width=100),\n                    strand=sample(c(\"+\", \"-\"), 200, TRUE),\n                    feature_id=sprintf(\"ID%03d\", 1:200))\nrowData\n#&gt; GRanges object with 200 ranges and 1 metadata column:\n#&gt;         seqnames        ranges strand |  feature_id\n#&gt;            &lt;Rle&gt;     &lt;IRanges&gt;  &lt;Rle&gt; | &lt;character&gt;\n#&gt;     [1]     chr1 195982-196081      + |       ID001\n#&gt;     [2]     chr1 408064-408163      + |       ID002\n#&gt;     [3]     chr1 859439-859538      + |       ID003\n#&gt;     [4]     chr1 599960-600059      + |       ID004\n#&gt;     [5]     chr1 447976-448075      + |       ID005\n#&gt;     ...      ...           ...    ... .         ...\n#&gt;   [196]     chr2 990022-990121      - |       ID196\n#&gt;   [197]     chr2 567394-567493      - |       ID197\n#&gt;   [198]     chr2 976124-976223      + |       ID198\n#&gt;   [199]     chr2 608042-608141      - |       ID199\n#&gt;   [200]     chr2 648384-648483      - |       ID200\n#&gt;   -------\n#&gt;   seqinfo: 2 sequences from an unspecified genome; no seqlengths\n# 样本元数据\ncolData &lt;- DataFrame(Treatment=rep(c(\"ChIP\", \"Input\"), 3),\n                     row.names=LETTERS[1:6])\n# 元数据\nmetadata &lt;- \"这是关于如何一个创建SE的说明对象\" \n\nse &lt;- SummarizedExperiment(assays=list(counts=counts),\n                           rowRanges=rowData, \n                           colData=colData,\n                           metadata=metadata)\nse\n#&gt; class: RangedSummarizedExperiment \n#&gt; dim: 200 6 \n#&gt; metadata(1): ''\n#&gt; assays(1): counts\n#&gt; rownames: NULL\n#&gt; rowData names(1): feature_id\n#&gt; colnames(6): A B ... E F\n#&gt; colData names(1): Treatment"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "Introduction",
    "section": "",
    "text": "第一部分 Introduction\n包括：\n\n获取scRNA-seq数据集\n`SingleCellExpreiment`结构\n分析概述\n\nC:\\Users\\DELL\\AppData\\Local/R/cache/R/"
  },
  {
    "objectID": "import.html#实验设计",
    "href": "import.html#实验设计",
    "title": "\n2  获取scRNA-seq数据集\n",
    "section": "\n2.1 实验设计",
    "text": "2.1 实验设计\nscRNA-Seq experimental protocols：\n\n基于液滴的方案，高通量，低成本，如10X Genomics、inDrop和Drop-seq；\n基于平板的方案，捕获其他表型信息（如形态学），并且更易于自定义\n基于UMI的平板方案，减轻了PCR扩增噪声的影响，如CEL-seq（2）和MARS-seq；\n基于读取的平板方案，提供全转录覆盖，（如剪接、外显子组突变），主要是Smart-seq2；\n其他方案，如sciRNA-seq。\n\n捕获细胞数目和测序深度"
  },
  {
    "objectID": "import.html#创建计数矩阵",
    "href": "import.html#创建计数矩阵",
    "title": "\n2  获取scRNA-seq数据集\n",
    "section": "\n2.2 创建计数矩阵",
    "text": "2.2 创建计数矩阵\nCellranger\nalevin"
  },
  {
    "objectID": "import.html#导入计数矩阵",
    "href": "import.html#导入计数矩阵",
    "title": "\n2  获取scRNA-seq数据集\n",
    "section": "\n2.3 导入计数矩阵",
    "text": "2.3 导入计数矩阵\n\n2.3.1 从表格格式\n从csv 文件导入计数矩阵，点击下载胰腺scRNA-seq数据集：GSE85241_cellsystems_dataset_4donors_updated.csv.gz(HTTP) 解压到data文件夹\n\nCodemat &lt;- as.matrix(read.delim(\"data/GSE85241_cellsystems_dataset_4donors_updated.csv\"))\ndim(mat)\n#&gt; [1] 19140  3072\n\n\n使用 scuttle 包中的函数以稀疏格式(sparse format)读取表。这仅存储非零值，并避免在低测序的scRNA-seq实验中将内存花费在大多数零上\n\nCodesparse.mat &lt;- readSparseCounts(\"data/GSE85241_cellsystems_dataset_4donors_updated.csv\")\ndim(sparse.mat)\n#&gt; [1] 19140  3072\n\n\n比较两种方法的内存大小,查看Environment中的size大小，或者\n\nCodeobject.size(sparse.mat)\n#&gt; 150978872 bytes\nobject.size(mat)\n#&gt; 471999152 bytes\n\n\n从Excel 文件中导入计数矩阵,点击下载：GSE61533_HTSEQ_count_results.xls.gz(HTTP)解压到data文件夹\n\nCodelibrary(readxl)\nall.counts &lt;- read_excel(\"data/GSE61533_HTSEQ_count_results.xls\")\ngene.names &lt;- all.counts$ID\nall.counts &lt;- as.matrix(all.counts[,-1])\nrownames(all.counts) &lt;- gene.names\ndim(all.counts)\n#&gt; [1] 38498    96\n\n\n\n2.3.2 从 Cellranger 输出\n对于 10X Genomics 数据，Cellranger 软件套件将生成一个包含计数和特征/条形码注释的输出目录。 点击下载：Gene / cell matrix (filtered)\n\nCodelibrary(DropletUtils)\nsce &lt;- read10xCounts(\"data/filtered_gene_bc_matrices/GRCh38\")\nsce\n#&gt; class: SingleCellExperiment \n#&gt; dim: 33694 4340 \n#&gt; metadata(1): Samples\n#&gt; assays(1): counts\n#&gt; rownames(33694): ENSG00000243485 ENSG00000237613 ... ENSG00000277475\n#&gt;   ENSG00000268674\n#&gt; rowData names(2): ID Symbol\n#&gt; colnames: NULL\n#&gt; colData names(2): Sample Barcode\n#&gt; reducedDimNames(0):\n#&gt; mainExpName: NULL\n#&gt; altExpNames(0):\n\n\n通过将多个目录路径传递给read10xCounts()来读取多个计数矩阵。如果所有数据集都具有相同的基因注释，则该函数将能够将它们组合到单个对象中。\n\nCodedirA &lt;- \"data/filtered_gene_bc_matrices/GRCh38\"\ndirB &lt;- \"data/filtered_gene_bc_matrices - 副本/GRCh38\" #复制 \nsce &lt;- read10xCounts(c(dirA, dirB))\nsce\n#&gt; class: SingleCellExperiment \n#&gt; dim: 33694 8680 \n#&gt; metadata(1): Samples\n#&gt; assays(1): counts\n#&gt; rownames(33694): ENSG00000243485 ENSG00000237613 ... ENSG00000277475\n#&gt;   ENSG00000268674\n#&gt; rowData names(2): ID Symbol\n#&gt; colnames: NULL\n#&gt; colData names(2): Sample Barcode\n#&gt; reducedDimNames(0):\n#&gt; mainExpName: NULL\n#&gt; altExpNames(0):\n\n\n\n2.3.3 来自基于 HDF5 的格式\n一系列scRNA-seq存储格式基于分层数据格式第5版（HDF5）,无需将所有数据读入 R 即可进行基于bioconductor的分析,这使得在计算机内存有限的情况下分析非常大的数据集。 这些格式能够在同一文件中存储表达值以及相关的基因和细胞注释。\n这种方法的一种风格是 H5AD 格式。点击下载：Gene / cell matrix HDF5 (raw)\n\nCodelibrary(zellkonverter)\ndemo &lt;- system.file(\"extdata\", \"krumsiek11.h5ad\", package = \"zellkonverter\")\nsce &lt;- zellkonverter::readH5AD(demo)\nsce\n\n\n另一种风格是Loom 文件格式\n\nCodelibrary(LoomExperiment,quietly = TRUE)\ndemo &lt;- system.file(\"extdata\", \"L1_DRG_20_example.loom\", package = \"LoomExperiment\")\nscle &lt;- import(demo, type=\"SingleCellLoomExperiment\")\nscle\n#&gt; class: SingleCellLoomExperiment \n#&gt; dim: 20 20 \n#&gt; metadata(4): CreatedWith LOOM_SPEC_VERSION LoomExperiment-class\n#&gt;   MatrixName\n#&gt; assays(1): matrix\n#&gt; rownames: NULL\n#&gt; rowData names(7): Accession Gene ... X_Total X_Valid\n#&gt; colnames: NULL\n#&gt; colData names(103): Age AnalysisPool ... cDNA_Lib_Ok ngperul_cDNA\n#&gt; reducedDimNames(0):\n#&gt; mainExpName: NULL\n#&gt; altExpNames(0):\n#&gt; rowGraphs(0): NULL\n#&gt; colGraphs(2): KNN MKNN"
  },
  {
    "objectID": "SCE.html#概述",
    "href": "SCE.html#概述",
    "title": "3  SingleCellExperiment结构",
    "section": "\n3.1 概述",
    "text": "3.1 概述\nSingleCellExperiment结构如下图 图 3.1 所示。它实现了一个数据结构，用于存储单细胞数据的所有方面——逐细胞基因表达数据、每细胞元数据和每基因注释——并以同步的方式对其进行操作。\n\n\n图 3.1: `SingleCellExperiment `的结构概述。assays的每一行对应于 rowData（粉红色阴影）的一行，而assays的每一列对应于 colData 和 reducedDims（黄色阴影）的一行\n\n下载SingleCellExperiment包\n\nCodeBiocManager::install('SingleCellExperiment')\n\n\n载入SingleCellExperiment包\n\nCodelibrary(SingleCellExperiment)"
  },
  {
    "objectID": "SCE.html#表达矩阵primar-data",
    "href": "SCE.html#表达矩阵primar-data",
    "title": "3  SingleCellExperiment结构",
    "section": "\n3.2 表达矩阵（primar data）",
    "text": "3.2 表达矩阵（primar data）\n\n3.2.1 填充assays\n\n要构造一个SingleCellExperiment对象，我们只需要填充assays。 这包含原始数据，例如测序计数矩阵，其中行对应于特征（基因），列对应于样本（细胞）（ 图 3.1 ，蓝色框）。点击下载：counts_Calero_20160113.tsv。\n\nCodedf &lt;- read_tsv(\"data/counts_Calero_20160113.tsv\")\n\n# 只考虑内源性基因\nspike.df &lt;- df[str_detect(df$GeneID,\"^ERCC-\"),] #正则表达式，查询外源RNA\ndf&lt;- df[str_detect(df$GeneID,\"^ENSMUSG\"),]  #正则表达式，内源性RNA\ngene.length &lt;- df$Length\n\n# 计数矩阵\nmat&lt;- as.matrix(df[,-c(1,2)]) \nrow.names(mat) &lt;- df$GeneID\ndim(mat)\n#&gt; [1] 46603    96\n\n\n\n\n\n\n\n\nERCC = External RNA Controls Consortium ERCC就是一个专门为了定制一套spike-in RNA而成立的组织。\n\n\n\n由此，我们现在可以使用函数SingleCellExperiment()构造对象，以命名列表的形式提供数据，其中列表的每个条目都是一个矩阵。\n\nCode#?SingleCellExperiment\nsce &lt;- SingleCellExperiment(assays = list(counts = mat))\nsce\n#&gt; class: SingleCellExperiment \n#&gt; dim: 46603 96 \n#&gt; metadata(0):\n#&gt; assays(1): counts\n#&gt; rownames(46603): ENSMUSG00000102693 ENSMUSG00000064842 ...\n#&gt;   ENSMUSG00000096730 ENSMUSG00000095742\n#&gt; rowData names(0):\n#&gt; colnames(96): SLX-9555.N701_S502.C89V9ANXX.s_1.r_1\n#&gt;   SLX-9555.N701_S503.C89V9ANXX.s_1.r_1 ...\n#&gt;   SLX-9555.N712_S508.C89V9ANXX.s_1.r_1\n#&gt;   SLX-9555.N712_S517.C89V9ANXX.s_1.r_1\n#&gt; colData names(0):\n#&gt; reducedDimNames(0):\n#&gt; mainExpName: NULL\n#&gt; altExpNames(0):\n\n\n#访问计数数据\nmat2 &lt;- assay(sce, \"counts\")  #通用\nmat3 &lt;- counts(sce)           #特殊名称 counts  \n\n\n\n3.2.2 添加assays\n\n\nCodesce &lt;- scuttle::logNormCounts(sce) #对数变换归一化表达矩阵\nsce    #  assays 多了一个  \"logcounts\"\n#&gt; class: SingleCellExperiment \n#&gt; dim: 46603 96 \n#&gt; metadata(0):\n#&gt; assays(2): counts logcounts\n#&gt; rownames(46603): ENSMUSG00000102693 ENSMUSG00000064842 ...\n#&gt;   ENSMUSG00000096730 ENSMUSG00000095742\n#&gt; rowData names(0):\n#&gt; colnames(96): SLX-9555.N701_S502.C89V9ANXX.s_1.r_1\n#&gt;   SLX-9555.N701_S503.C89V9ANXX.s_1.r_1 ...\n#&gt;   SLX-9555.N712_S508.C89V9ANXX.s_1.r_1\n#&gt;   SLX-9555.N712_S517.C89V9ANXX.s_1.r_1\n#&gt; colData names(1): sizeFactor\n#&gt; reducedDimNames(0):\n#&gt; mainExpName: NULL\n#&gt; altExpNames(0):\n\ndim(logcounts(sce))\n#&gt; [1] 46603    96\n\n\n自定义添加\n\nCodecounts_100 &lt;- counts(sce) + 100\nassay(sce, \"counts_100\") &lt;- counts_100 # assign a new entry to assays slot\nassays(sce) # new assay has now been added.\n#&gt; List of length 3\n#&gt; names(3): counts logcounts counts_100\nsce\n#&gt; class: SingleCellExperiment \n#&gt; dim: 46603 96 \n#&gt; metadata(0):\n#&gt; assays(3): counts logcounts counts_100\n#&gt; rownames(46603): ENSMUSG00000102693 ENSMUSG00000064842 ...\n#&gt;   ENSMUSG00000096730 ENSMUSG00000095742\n#&gt; rowData names(0):\n#&gt; colnames(96): SLX-9555.N701_S502.C89V9ANXX.s_1.r_1\n#&gt;   SLX-9555.N701_S503.C89V9ANXX.s_1.r_1 ...\n#&gt;   SLX-9555.N712_S508.C89V9ANXX.s_1.r_1\n#&gt;   SLX-9555.N712_S517.C89V9ANXX.s_1.r_1\n#&gt; colData names(1): sizeFactor\n#&gt; reducedDimNames(0):\n#&gt; mainExpName: NULL\n#&gt; altExpNames(0):\n\n\n访问和操纵\n\nCodeassays(sce)\n#&gt; List of length 3\n#&gt; names(3): counts logcounts counts_100\n\n# Only keeping the first two assays\nassays(sce) &lt;- assays(sce)[1:2]\nsce\n#&gt; class: SingleCellExperiment \n#&gt; dim: 46603 96 \n#&gt; metadata(0):\n#&gt; assays(2): counts logcounts\n#&gt; rownames(46603): ENSMUSG00000102693 ENSMUSG00000064842 ...\n#&gt;   ENSMUSG00000096730 ENSMUSG00000095742\n#&gt; rowData names(0):\n#&gt; colnames(96): SLX-9555.N701_S502.C89V9ANXX.s_1.r_1\n#&gt;   SLX-9555.N701_S503.C89V9ANXX.s_1.r_1 ...\n#&gt;   SLX-9555.N712_S508.C89V9ANXX.s_1.r_1\n#&gt;   SLX-9555.N712_S517.C89V9ANXX.s_1.r_1\n#&gt; colData names(1): sizeFactor\n#&gt; reducedDimNames(0):\n#&gt; mainExpName: NULL\n#&gt; altExpNames(0):\n\nassayNames(sce)\n#&gt; [1] \"counts\"    \"logcounts\"\nnames(assays(sce))\n#&gt; [1] \"counts\"    \"logcounts\""
  },
  {
    "objectID": "SCE.html#处理元数据metadata",
    "href": "SCE.html#处理元数据metadata",
    "title": "3  SingleCellExperiment结构",
    "section": "\n3.3 处理元数据（metadata）",
    "text": "3.3 处理元数据（metadata）\n\n3.3.1 cell metadata（colData）\n为了进一步注释对象SingleCellExperiment，可以添加列元数据来描述我们primary data的列，例如我们实验的样本或细胞。 这些存储在colDataslot中，该对象DataFrame中的行对应于细胞，列对应于元数据字段，例如原产地批次batch of origin、处理条件treatment condition等（ 图 3.1，橙色框）。点击下载：E-MTAB-5522.sdrf.txt（第2页）\n\nCodecoldata &lt;- read_tsv(\"data/E-MTAB-5522.sdrf.txt\")\n\n# 仅保留在计数矩阵 mat 中的细胞  第44列==\"counts_Calero_20160113.tsv\"\ncoldata &lt;- coldata[coldata$`Derived Array Data File`==\"counts_Calero_20160113.tsv\",]\n\n# 仅保留部分列和设置行标识符\ncoldata &lt;- DataFrame(\n  genotype=coldata$`Characteristics[genotype]`,\n  phenotype=coldata$`Characteristics[phenotype]`,\n  spike_in=coldata$`Factor Value[spike-in addition]`,\n  row.names = coldata$`Source Name`\n)\ncoldata\n#&gt; DataFrame with 96 rows and 3 columns\n#&gt;                                                    genotype\n#&gt;                                                 &lt;character&gt;\n#&gt; SLX-9555.N701_S502.C89V9ANXX.s_1.r_1 Doxycycline-inducibl..\n#&gt; SLX-9555.N701_S503.C89V9ANXX.s_1.r_1 Doxycycline-inducibl..\n#&gt; SLX-9555.N701_S504.C89V9ANXX.s_1.r_1 Doxycycline-inducibl..\n#&gt; SLX-9555.N701_S505.C89V9ANXX.s_1.r_1 Doxycycline-inducibl..\n#&gt; SLX-9555.N701_S506.C89V9ANXX.s_1.r_1 Doxycycline-inducibl..\n#&gt; ...                                                     ...\n#&gt; SLX-9555.N712_S505.C89V9ANXX.s_1.r_1 Doxycycline-inducibl..\n#&gt; SLX-9555.N712_S506.C89V9ANXX.s_1.r_1 Doxycycline-inducibl..\n#&gt; SLX-9555.N712_S507.C89V9ANXX.s_1.r_1 Doxycycline-inducibl..\n#&gt; SLX-9555.N712_S508.C89V9ANXX.s_1.r_1 Doxycycline-inducibl..\n#&gt; SLX-9555.N712_S517.C89V9ANXX.s_1.r_1 Doxycycline-inducibl..\n#&gt;                                                   phenotype    spike_in\n#&gt;                                                 &lt;character&gt; &lt;character&gt;\n#&gt; SLX-9555.N701_S502.C89V9ANXX.s_1.r_1    wild type phenotype   ERCC+SIRV\n#&gt; SLX-9555.N701_S503.C89V9ANXX.s_1.r_1    wild type phenotype   ERCC+SIRV\n#&gt; SLX-9555.N701_S504.C89V9ANXX.s_1.r_1    wild type phenotype   ERCC+SIRV\n#&gt; SLX-9555.N701_S505.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..   ERCC+SIRV\n#&gt; SLX-9555.N701_S506.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..   ERCC+SIRV\n#&gt; ...                                                     ...         ...\n#&gt; SLX-9555.N712_S505.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..    Premixed\n#&gt; SLX-9555.N712_S506.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..    Premixed\n#&gt; SLX-9555.N712_S507.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..    Premixed\n#&gt; SLX-9555.N712_S508.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..    Premixed\n#&gt; SLX-9555.N712_S517.C89V9ANXX.s_1.r_1    wild type phenotype    Premixed\n\n\n\nCodestopifnot(identical(rownames(coldata), colnames(mat)))\n\n\n两种方法\n\n\n从头开始\n\n\nCodesce &lt;- SingleCellExperiment(assays = list(counts=mat), colData=coldata)\nsce\n#&gt; class: SingleCellExperiment \n#&gt; dim: 46603 96 \n#&gt; metadata(0):\n#&gt; assays(1): counts\n#&gt; rownames(46603): ENSMUSG00000102693 ENSMUSG00000064842 ...\n#&gt;   ENSMUSG00000096730 ENSMUSG00000095742\n#&gt; rowData names(0):\n#&gt; colnames(96): SLX-9555.N701_S502.C89V9ANXX.s_1.r_1\n#&gt;   SLX-9555.N701_S503.C89V9ANXX.s_1.r_1 ...\n#&gt;   SLX-9555.N712_S508.C89V9ANXX.s_1.r_1\n#&gt;   SLX-9555.N712_S517.C89V9ANXX.s_1.r_1\n#&gt; colData names(3): genotype phenotype spike_in\n#&gt; reducedDimNames(0):\n#&gt; mainExpName: NULL\n#&gt; altExpNames(0):\n\ncolData(sce)\n#&gt; DataFrame with 96 rows and 3 columns\n#&gt;                                                    genotype\n#&gt;                                                 &lt;character&gt;\n#&gt; SLX-9555.N701_S502.C89V9ANXX.s_1.r_1 Doxycycline-inducibl..\n#&gt; SLX-9555.N701_S503.C89V9ANXX.s_1.r_1 Doxycycline-inducibl..\n#&gt; SLX-9555.N701_S504.C89V9ANXX.s_1.r_1 Doxycycline-inducibl..\n#&gt; SLX-9555.N701_S505.C89V9ANXX.s_1.r_1 Doxycycline-inducibl..\n#&gt; SLX-9555.N701_S506.C89V9ANXX.s_1.r_1 Doxycycline-inducibl..\n#&gt; ...                                                     ...\n#&gt; SLX-9555.N712_S505.C89V9ANXX.s_1.r_1 Doxycycline-inducibl..\n#&gt; SLX-9555.N712_S506.C89V9ANXX.s_1.r_1 Doxycycline-inducibl..\n#&gt; SLX-9555.N712_S507.C89V9ANXX.s_1.r_1 Doxycycline-inducibl..\n#&gt; SLX-9555.N712_S508.C89V9ANXX.s_1.r_1 Doxycycline-inducibl..\n#&gt; SLX-9555.N712_S517.C89V9ANXX.s_1.r_1 Doxycycline-inducibl..\n#&gt;                                                   phenotype    spike_in\n#&gt;                                                 &lt;character&gt; &lt;character&gt;\n#&gt; SLX-9555.N701_S502.C89V9ANXX.s_1.r_1    wild type phenotype   ERCC+SIRV\n#&gt; SLX-9555.N701_S503.C89V9ANXX.s_1.r_1    wild type phenotype   ERCC+SIRV\n#&gt; SLX-9555.N701_S504.C89V9ANXX.s_1.r_1    wild type phenotype   ERCC+SIRV\n#&gt; SLX-9555.N701_S505.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..   ERCC+SIRV\n#&gt; SLX-9555.N701_S506.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..   ERCC+SIRV\n#&gt; ...                                                     ...         ...\n#&gt; SLX-9555.N712_S505.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..    Premixed\n#&gt; SLX-9555.N712_S506.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..    Premixed\n#&gt; SLX-9555.N712_S507.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..    Premixed\n#&gt; SLX-9555.N712_S508.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..    Premixed\n#&gt; SLX-9555.N712_S517.C89V9ANXX.s_1.r_1    wild type phenotype    Premixed\nsce$spike_in\n#&gt;  [1] \"ERCC+SIRV\" \"ERCC+SIRV\" \"ERCC+SIRV\" \"ERCC+SIRV\" \"ERCC+SIRV\" \"ERCC+SIRV\"\n#&gt;  [7] \"ERCC+SIRV\" \"ERCC+SIRV\" \"ERCC+SIRV\" \"ERCC+SIRV\" \"ERCC+SIRV\" \"ERCC+SIRV\"\n#&gt; [13] \"ERCC+SIRV\" \"ERCC+SIRV\" \"ERCC+SIRV\" \"ERCC+SIRV\" \"ERCC+SIRV\" \"ERCC+SIRV\"\n#&gt; [19] \"ERCC+SIRV\" \"ERCC+SIRV\" \"ERCC+SIRV\" \"ERCC+SIRV\" \"ERCC+SIRV\" \"ERCC+SIRV\"\n#&gt; [25] \"ERCC+SIRV\" \"ERCC+SIRV\" \"ERCC+SIRV\" \"ERCC+SIRV\" \"ERCC+SIRV\" \"ERCC+SIRV\"\n#&gt; [31] \"ERCC+SIRV\" \"ERCC+SIRV\" \"SIRV+ERCC\" \"SIRV+ERCC\" \"SIRV+ERCC\" \"SIRV+ERCC\"\n#&gt; [37] \"SIRV+ERCC\" \"SIRV+ERCC\" \"SIRV+ERCC\" \"SIRV+ERCC\" \"SIRV+ERCC\" \"SIRV+ERCC\"\n#&gt; [43] \"SIRV+ERCC\" \"SIRV+ERCC\" \"SIRV+ERCC\" \"SIRV+ERCC\" \"SIRV+ERCC\" \"SIRV+ERCC\"\n#&gt; [49] \"SIRV+ERCC\" \"SIRV+ERCC\" \"SIRV+ERCC\" \"SIRV+ERCC\" \"SIRV+ERCC\" \"SIRV+ERCC\"\n#&gt; [55] \"SIRV+ERCC\" \"SIRV+ERCC\" \"SIRV+ERCC\" \"SIRV+ERCC\" \"SIRV+ERCC\" \"SIRV+ERCC\"\n#&gt; [61] \"SIRV+ERCC\" \"SIRV+ERCC\" \"SIRV+ERCC\" \"SIRV+ERCC\" \"Premixed\"  \"Premixed\" \n#&gt; [67] \"Premixed\"  \"Premixed\"  \"Premixed\"  \"Premixed\"  \"Premixed\"  \"Premixed\" \n#&gt; [73] \"Premixed\"  \"Premixed\"  \"Premixed\"  \"Premixed\"  \"Premixed\"  \"Premixed\" \n#&gt; [79] \"Premixed\"  \"Premixed\"  \"Premixed\"  \"Premixed\"  \"Premixed\"  \"Premixed\" \n#&gt; [85] \"Premixed\"  \"Premixed\"  \"Premixed\"  \"Premixed\"  \"Premixed\"  \"Premixed\" \n#&gt; [91] \"Premixed\"  \"Premixed\"  \"Premixed\"  \"Premixed\"  \"Premixed\"  \"Premixed\"\n\n\n\n\n\n向现有对象添加\n\n\nCodesce &lt;- SingleCellExperiment(list(counts=mat))\nsce\n#&gt; class: SingleCellExperiment \n#&gt; dim: 46603 96 \n#&gt; metadata(0):\n#&gt; assays(1): counts\n#&gt; rownames(46603): ENSMUSG00000102693 ENSMUSG00000064842 ...\n#&gt;   ENSMUSG00000096730 ENSMUSG00000095742\n#&gt; rowData names(0):\n#&gt; colnames(96): SLX-9555.N701_S502.C89V9ANXX.s_1.r_1\n#&gt;   SLX-9555.N701_S503.C89V9ANXX.s_1.r_1 ...\n#&gt;   SLX-9555.N712_S508.C89V9ANXX.s_1.r_1\n#&gt;   SLX-9555.N712_S517.C89V9ANXX.s_1.r_1\n#&gt; colData names(0):\n#&gt; reducedDimNames(0):\n#&gt; mainExpName: NULL\n#&gt; altExpNames(0):\n\ncolData(sce) &lt;- coldata\n\nsce\n#&gt; class: SingleCellExperiment \n#&gt; dim: 46603 96 \n#&gt; metadata(0):\n#&gt; assays(1): counts\n#&gt; rownames(46603): ENSMUSG00000102693 ENSMUSG00000064842 ...\n#&gt;   ENSMUSG00000096730 ENSMUSG00000095742\n#&gt; rowData names(0):\n#&gt; colnames(96): SLX-9555.N701_S502.C89V9ANXX.s_1.r_1\n#&gt;   SLX-9555.N701_S503.C89V9ANXX.s_1.r_1 ...\n#&gt;   SLX-9555.N712_S508.C89V9ANXX.s_1.r_1\n#&gt;   SLX-9555.N712_S517.C89V9ANXX.s_1.r_1\n#&gt; colData names(3): genotype phenotype spike_in\n#&gt; reducedDimNames(0):\n#&gt; mainExpName: NULL\n#&gt; altExpNames(0):\n\n\n\n或者\n\n\nCodesce &lt;- SingleCellExperiment(list(counts=mat))\nsce$phenotype &lt;- coldata$phenotype\ncolData(sce)\n#&gt; DataFrame with 96 rows and 1 column\n#&gt;                                                   phenotype\n#&gt;                                                 &lt;character&gt;\n#&gt; SLX-9555.N701_S502.C89V9ANXX.s_1.r_1    wild type phenotype\n#&gt; SLX-9555.N701_S503.C89V9ANXX.s_1.r_1    wild type phenotype\n#&gt; SLX-9555.N701_S504.C89V9ANXX.s_1.r_1    wild type phenotype\n#&gt; SLX-9555.N701_S505.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..\n#&gt; SLX-9555.N701_S506.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..\n#&gt; ...                                                     ...\n#&gt; SLX-9555.N712_S505.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..\n#&gt; SLX-9555.N712_S506.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..\n#&gt; SLX-9555.N712_S507.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..\n#&gt; SLX-9555.N712_S508.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..\n#&gt; SLX-9555.N712_S517.C89V9ANXX.s_1.r_1    wild type phenotype\n\n\n\n\n\n某些函数通过返回带有额外字段的SingleCellExperiment 结构在colData中自动添加列元数据，\n\nCode\nsce &lt;- scuttle::addPerCellQC(sce)  #quality control metrics质量控制指标\ncolData(sce)\n#&gt; DataFrame with 96 rows and 4 columns\n#&gt;                                                   phenotype       sum  detected\n#&gt;                                                 &lt;character&gt; &lt;numeric&gt; &lt;numeric&gt;\n#&gt; SLX-9555.N701_S502.C89V9ANXX.s_1.r_1    wild type phenotype    854171      7617\n#&gt; SLX-9555.N701_S503.C89V9ANXX.s_1.r_1    wild type phenotype   1044243      7520\n#&gt; SLX-9555.N701_S504.C89V9ANXX.s_1.r_1    wild type phenotype   1152450      8305\n#&gt; SLX-9555.N701_S505.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..   1193876      8142\n#&gt; SLX-9555.N701_S506.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..   1521472      7153\n#&gt; ...                                                     ...       ...       ...\n#&gt; SLX-9555.N712_S505.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..    203221      5608\n#&gt; SLX-9555.N712_S506.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..   1059853      6948\n#&gt; SLX-9555.N712_S507.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..   1672343      6879\n#&gt; SLX-9555.N712_S508.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..   1939537      7213\n#&gt; SLX-9555.N712_S517.C89V9ANXX.s_1.r_1    wild type phenotype   1436899      8469\n#&gt;                                          total\n#&gt;                                      &lt;numeric&gt;\n#&gt; SLX-9555.N701_S502.C89V9ANXX.s_1.r_1    854171\n#&gt; SLX-9555.N701_S503.C89V9ANXX.s_1.r_1   1044243\n#&gt; SLX-9555.N701_S504.C89V9ANXX.s_1.r_1   1152450\n#&gt; SLX-9555.N701_S505.C89V9ANXX.s_1.r_1   1193876\n#&gt; SLX-9555.N701_S506.C89V9ANXX.s_1.r_1   1521472\n#&gt; ...                                        ...\n#&gt; SLX-9555.N712_S505.C89V9ANXX.s_1.r_1    203221\n#&gt; SLX-9555.N712_S506.C89V9ANXX.s_1.r_1   1059853\n#&gt; SLX-9555.N712_S507.C89V9ANXX.s_1.r_1   1672343\n#&gt; SLX-9555.N712_S508.C89V9ANXX.s_1.r_1   1939537\n#&gt; SLX-9555.N712_S517.C89V9ANXX.s_1.r_1   1436899\nsce\n#&gt; class: SingleCellExperiment \n#&gt; dim: 46603 96 \n#&gt; metadata(0):\n#&gt; assays(1): counts\n#&gt; rownames(46603): ENSMUSG00000102693 ENSMUSG00000064842 ...\n#&gt;   ENSMUSG00000096730 ENSMUSG00000095742\n#&gt; rowData names(0):\n#&gt; colnames(96): SLX-9555.N701_S502.C89V9ANXX.s_1.r_1\n#&gt;   SLX-9555.N701_S503.C89V9ANXX.s_1.r_1 ...\n#&gt;   SLX-9555.N712_S508.C89V9ANXX.s_1.r_1\n#&gt;   SLX-9555.N712_S517.C89V9ANXX.s_1.r_1\n#&gt; colData names(4): phenotype sum detected total\n#&gt; reducedDimNames(0):\n#&gt; mainExpName: NULL\n#&gt; altExpNames(0):\n\n\n\n3.3.2 feature metadata ( rowData)\n\n3.3.2.1 rowData\n\n特征注释一般存储在rowData slot 中，DataFrame中每行对应一个基因，并包含转录物长度或基因符号等注释。\n\nCoderowData(sce)$Length &lt;- gene.length\nrowData(sce)\n#&gt; DataFrame with 46603 rows and 1 column\n#&gt;                       Length\n#&gt;                    &lt;numeric&gt;\n#&gt; ENSMUSG00000102693      1070\n#&gt; ENSMUSG00000064842       110\n#&gt; ENSMUSG00000051951      6094\n#&gt; ENSMUSG00000102851       480\n#&gt; ENSMUSG00000103377      2819\n#&gt; ...                      ...\n#&gt; ENSMUSG00000094431       100\n#&gt; ENSMUSG00000094621       121\n#&gt; ENSMUSG00000098647        99\n#&gt; ENSMUSG00000096730      3077\n#&gt; ENSMUSG00000095742       243\n\n\n某些函数将返回一个rowData填充了相关信息位的SingleCellExperiment\n\nCodesce &lt;- scuttle::addPerFeatureQC(sce)\nrowData(sce)\n#&gt; DataFrame with 46603 rows and 3 columns\n#&gt;                       Length      mean  detected\n#&gt;                    &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;\n#&gt; ENSMUSG00000102693      1070 0.0000000   0.00000\n#&gt; ENSMUSG00000064842       110 0.0000000   0.00000\n#&gt; ENSMUSG00000051951      6094 0.0000000   0.00000\n#&gt; ENSMUSG00000102851       480 0.0000000   0.00000\n#&gt; ENSMUSG00000103377      2819 0.0208333   1.04167\n#&gt; ...                      ...       ...       ...\n#&gt; ENSMUSG00000094431       100         0         0\n#&gt; ENSMUSG00000094621       121         0         0\n#&gt; ENSMUSG00000098647        99         0         0\n#&gt; ENSMUSG00000096730      3077         0         0\n#&gt; ENSMUSG00000095742       243         0         0\n\n\n\n3.3.2.2 rowRanges\n\n此外，还有一个特殊的 rowRanges，用于以 GRanges或GRangesList的形式保存基因组坐标。 该存储描述了特征（基因、基因组区域）的染色体、起始坐标和结束坐标，这些特征可以通过 GenomicRanges框架轻松查询和操作。\n\nCodeSummarizedExperiment::rowRanges(sce)  #empty\n#&gt; GRangesList object of length 46603:\n#&gt; $ENSMUSG00000102693\n#&gt; GRanges object with 0 ranges and 0 metadata columns:\n#&gt;    seqnames    ranges strand\n#&gt;       &lt;Rle&gt; &lt;IRanges&gt;  &lt;Rle&gt;\n#&gt;   -------\n#&gt;   seqinfo: no sequences\n#&gt; \n#&gt; $ENSMUSG00000064842\n#&gt; GRanges object with 0 ranges and 0 metadata columns:\n#&gt;    seqnames    ranges strand\n#&gt;       &lt;Rle&gt; &lt;IRanges&gt;  &lt;Rle&gt;\n#&gt;   -------\n#&gt;   seqinfo: no sequences\n#&gt; \n#&gt; $ENSMUSG00000051951\n#&gt; GRanges object with 0 ranges and 0 metadata columns:\n#&gt;    seqnames    ranges strand\n#&gt;       &lt;Rle&gt; &lt;IRanges&gt;  &lt;Rle&gt;\n#&gt;   -------\n#&gt;   seqinfo: no sequences\n#&gt; \n#&gt; ...\n#&gt; &lt;46600 more elements&gt;\n\n\n填充 rowRanges的方式取决于在比对和定量过程中使用的生物体和注释。 在这里，我们有 Ensembl 标识符，因此我们可以使用rtracklayer从包含 Ensembl 注释的 GTF 文件中载入GRanges。点击下载：Mus_musculus.GRCm38.82.gtf.gz\n\nCodegene.data &lt;- rtracklayer::import(\"data/Mus_musculus.GRCm38.82.gtf.gz\")\nhead(gene.data)\n#&gt; GRanges object with 6 ranges and 26 metadata columns:\n#&gt;       seqnames          ranges strand |   source       type     score     phase\n#&gt;          &lt;Rle&gt;       &lt;IRanges&gt;  &lt;Rle&gt; | &lt;factor&gt;   &lt;factor&gt; &lt;numeric&gt; &lt;integer&gt;\n#&gt;   [1]        1 3073253-3074322      + |  havana  gene              NA      &lt;NA&gt;\n#&gt;   [2]        1 3073253-3074322      + |  havana  transcript        NA      &lt;NA&gt;\n#&gt;   [3]        1 3073253-3074322      + |  havana  exon              NA      &lt;NA&gt;\n#&gt;   [4]        1 3102016-3102125      + |  ensembl gene              NA      &lt;NA&gt;\n#&gt;   [5]        1 3102016-3102125      + |  ensembl transcript        NA      &lt;NA&gt;\n#&gt;   [6]        1 3102016-3102125      + |  ensembl exon              NA      &lt;NA&gt;\n#&gt;                  gene_id gene_version     gene_name gene_source gene_biotype\n#&gt;              &lt;character&gt;  &lt;character&gt;   &lt;character&gt; &lt;character&gt;  &lt;character&gt;\n#&gt;   [1] ENSMUSG00000102693            1 4933401J01Rik      havana          TEC\n#&gt;   [2] ENSMUSG00000102693            1 4933401J01Rik      havana          TEC\n#&gt;   [3] ENSMUSG00000102693            1 4933401J01Rik      havana          TEC\n#&gt;   [4] ENSMUSG00000064842            1       Gm26206     ensembl        snRNA\n#&gt;   [5] ENSMUSG00000064842            1       Gm26206     ensembl        snRNA\n#&gt;   [6] ENSMUSG00000064842            1       Gm26206     ensembl        snRNA\n#&gt;              havana_gene havana_gene_version      transcript_id\n#&gt;              &lt;character&gt;         &lt;character&gt;        &lt;character&gt;\n#&gt;   [1] OTTMUSG00000049935                   1               &lt;NA&gt;\n#&gt;   [2] OTTMUSG00000049935                   1 ENSMUST00000193812\n#&gt;   [3] OTTMUSG00000049935                   1 ENSMUST00000193812\n#&gt;   [4]               &lt;NA&gt;                &lt;NA&gt;               &lt;NA&gt;\n#&gt;   [5]               &lt;NA&gt;                &lt;NA&gt; ENSMUST00000082908\n#&gt;   [6]               &lt;NA&gt;                &lt;NA&gt; ENSMUST00000082908\n#&gt;       transcript_version   transcript_name transcript_source transcript_biotype\n#&gt;              &lt;character&gt;       &lt;character&gt;       &lt;character&gt;        &lt;character&gt;\n#&gt;   [1]               &lt;NA&gt;              &lt;NA&gt;              &lt;NA&gt;               &lt;NA&gt;\n#&gt;   [2]                  1 4933401J01Rik-001            havana                TEC\n#&gt;   [3]                  1 4933401J01Rik-001            havana                TEC\n#&gt;   [4]               &lt;NA&gt;              &lt;NA&gt;              &lt;NA&gt;               &lt;NA&gt;\n#&gt;   [5]                  1       Gm26206-201           ensembl              snRNA\n#&gt;   [6]                  1       Gm26206-201           ensembl              snRNA\n#&gt;        havana_transcript havana_transcript_version         tag\n#&gt;              &lt;character&gt;               &lt;character&gt; &lt;character&gt;\n#&gt;   [1]               &lt;NA&gt;                      &lt;NA&gt;        &lt;NA&gt;\n#&gt;   [2] OTTMUST00000127109                         1       basic\n#&gt;   [3] OTTMUST00000127109                         1       basic\n#&gt;   [4]               &lt;NA&gt;                      &lt;NA&gt;        &lt;NA&gt;\n#&gt;   [5]               &lt;NA&gt;                      &lt;NA&gt;       basic\n#&gt;   [6]               &lt;NA&gt;                      &lt;NA&gt;       basic\n#&gt;       transcript_support_level exon_number            exon_id exon_version\n#&gt;                    &lt;character&gt; &lt;character&gt;        &lt;character&gt;  &lt;character&gt;\n#&gt;   [1]                     &lt;NA&gt;        &lt;NA&gt;               &lt;NA&gt;         &lt;NA&gt;\n#&gt;   [2]                       NA        &lt;NA&gt;               &lt;NA&gt;         &lt;NA&gt;\n#&gt;   [3]                       NA           1 ENSMUSE00001343744            1\n#&gt;   [4]                     &lt;NA&gt;        &lt;NA&gt;               &lt;NA&gt;         &lt;NA&gt;\n#&gt;   [5]                       NA        &lt;NA&gt;               &lt;NA&gt;         &lt;NA&gt;\n#&gt;   [6]                       NA           1 ENSMUSE00000522066            1\n#&gt;           ccds_id  protein_id protein_version\n#&gt;       &lt;character&gt; &lt;character&gt;     &lt;character&gt;\n#&gt;   [1]        &lt;NA&gt;        &lt;NA&gt;            &lt;NA&gt;\n#&gt;   [2]        &lt;NA&gt;        &lt;NA&gt;            &lt;NA&gt;\n#&gt;   [3]        &lt;NA&gt;        &lt;NA&gt;            &lt;NA&gt;\n#&gt;   [4]        &lt;NA&gt;        &lt;NA&gt;            &lt;NA&gt;\n#&gt;   [5]        &lt;NA&gt;        &lt;NA&gt;            &lt;NA&gt;\n#&gt;   [6]        &lt;NA&gt;        &lt;NA&gt;            &lt;NA&gt;\n#&gt;   -------\n#&gt;   seqinfo: 45 sequences from an unspecified genome; no seqlengths\n\n# 整理数据\ngene.data &lt;- gene.data[gene.data$type==\"gene\"]\nnames(gene.data) &lt;- gene.data$gene_id\n\n#DataFrame：mcols(gene.data) \nis.gene.related &lt;- str_detect(colnames(mcols(gene.data)),\"gene_\") #  6 TRUE\nmcols(gene.data) &lt;- mcols(gene.data)[,is.gene.related]\nmcols(gene.data)  # 46603 × 6\n#&gt; DataFrame with 46603 rows and 6 columns\n#&gt;                               gene_id gene_version      gene_name\n#&gt;                           &lt;character&gt;  &lt;character&gt;    &lt;character&gt;\n#&gt; ENSMUSG00000102693 ENSMUSG00000102693            1  4933401J01Rik\n#&gt; ENSMUSG00000064842 ENSMUSG00000064842            1        Gm26206\n#&gt; ENSMUSG00000051951 ENSMUSG00000051951            5           Xkr4\n#&gt; ENSMUSG00000102851 ENSMUSG00000102851            1        Gm18956\n#&gt; ENSMUSG00000103377 ENSMUSG00000103377            1        Gm37180\n#&gt; ...                               ...          ...            ...\n#&gt; ENSMUSG00000094431 ENSMUSG00000094431            1 CAAA01205117.1\n#&gt; ENSMUSG00000094621 ENSMUSG00000094621            1 CAAA01098150.1\n#&gt; ENSMUSG00000098647 ENSMUSG00000098647            1 CAAA01064564.1\n#&gt; ENSMUSG00000096730 ENSMUSG00000096730            6       Vmn2r122\n#&gt; ENSMUSG00000095742 ENSMUSG00000095742            1 CAAA01147332.1\n#&gt;                       gene_source         gene_biotype havana_gene_version\n#&gt;                       &lt;character&gt;          &lt;character&gt;         &lt;character&gt;\n#&gt; ENSMUSG00000102693         havana                  TEC                   1\n#&gt; ENSMUSG00000064842        ensembl                snRNA                  NA\n#&gt; ENSMUSG00000051951 ensembl_havana       protein_coding                   2\n#&gt; ENSMUSG00000102851         havana processed_pseudogene                   1\n#&gt; ENSMUSG00000103377         havana                  TEC                   1\n#&gt; ...                           ...                  ...                 ...\n#&gt; ENSMUSG00000094431        ensembl                miRNA                  NA\n#&gt; ENSMUSG00000094621        ensembl                miRNA                  NA\n#&gt; ENSMUSG00000098647        ensembl                miRNA                  NA\n#&gt; ENSMUSG00000096730        ensembl       protein_coding                  NA\n#&gt; ENSMUSG00000095742        ensembl       protein_coding                  NA\n\n#rownames(sce) 46603行 观测基因\nSummarizedExperiment::rowRanges(sce) &lt;- gene.data[rownames(sce)]\nSummarizedExperiment::rowRanges(sce)[1:10,]\n#&gt; GRanges object with 10 ranges and 6 metadata columns:\n#&gt;                      seqnames          ranges strand |            gene_id\n#&gt;                         &lt;Rle&gt;       &lt;IRanges&gt;  &lt;Rle&gt; |        &lt;character&gt;\n#&gt;   ENSMUSG00000102693        1 3073253-3074322      + | ENSMUSG00000102693\n#&gt;   ENSMUSG00000064842        1 3102016-3102125      + | ENSMUSG00000064842\n#&gt;   ENSMUSG00000051951        1 3205901-3671498      - | ENSMUSG00000051951\n#&gt;   ENSMUSG00000102851        1 3252757-3253236      + | ENSMUSG00000102851\n#&gt;   ENSMUSG00000103377        1 3365731-3368549      - | ENSMUSG00000103377\n#&gt;   ENSMUSG00000104017        1 3375556-3377788      - | ENSMUSG00000104017\n#&gt;   ENSMUSG00000103025        1 3464977-3467285      - | ENSMUSG00000103025\n#&gt;   ENSMUSG00000089699        1 3466587-3513553      + | ENSMUSG00000089699\n#&gt;   ENSMUSG00000103201        1 3512451-3514507      - | ENSMUSG00000103201\n#&gt;   ENSMUSG00000103147        1 3531795-3532720      + | ENSMUSG00000103147\n#&gt;                      gene_version     gene_name    gene_source\n#&gt;                       &lt;character&gt;   &lt;character&gt;    &lt;character&gt;\n#&gt;   ENSMUSG00000102693            1 4933401J01Rik         havana\n#&gt;   ENSMUSG00000064842            1       Gm26206        ensembl\n#&gt;   ENSMUSG00000051951            5          Xkr4 ensembl_havana\n#&gt;   ENSMUSG00000102851            1       Gm18956         havana\n#&gt;   ENSMUSG00000103377            1       Gm37180         havana\n#&gt;   ENSMUSG00000104017            1       Gm37363         havana\n#&gt;   ENSMUSG00000103025            1       Gm37686         havana\n#&gt;   ENSMUSG00000089699            1        Gm1992         havana\n#&gt;   ENSMUSG00000103201            1       Gm37329         havana\n#&gt;   ENSMUSG00000103147            1        Gm7341         havana\n#&gt;                              gene_biotype havana_gene_version\n#&gt;                               &lt;character&gt;         &lt;character&gt;\n#&gt;   ENSMUSG00000102693                  TEC                   1\n#&gt;   ENSMUSG00000064842                snRNA                &lt;NA&gt;\n#&gt;   ENSMUSG00000051951       protein_coding                   2\n#&gt;   ENSMUSG00000102851 processed_pseudogene                   1\n#&gt;   ENSMUSG00000103377                  TEC                   1\n#&gt;   ENSMUSG00000104017                  TEC                   1\n#&gt;   ENSMUSG00000103025                  TEC                   1\n#&gt;   ENSMUSG00000089699            antisense                   1\n#&gt;   ENSMUSG00000103201                  TEC                   1\n#&gt;   ENSMUSG00000103147 processed_pseudogene                   1\n#&gt;   -------\n#&gt;   seqinfo: 45 sequences from an unspecified genome; no seqlengths\n\nsce\n#&gt; class: SingleCellExperiment \n#&gt; dim: 46603 96 \n#&gt; metadata(0):\n#&gt; assays(1): counts\n#&gt; rownames(46603): ENSMUSG00000102693 ENSMUSG00000064842 ...\n#&gt;   ENSMUSG00000096730 ENSMUSG00000095742\n#&gt; rowData names(6): gene_id gene_version ... gene_biotype\n#&gt;   havana_gene_version\n#&gt; colnames(96): SLX-9555.N701_S502.C89V9ANXX.s_1.r_1\n#&gt;   SLX-9555.N701_S503.C89V9ANXX.s_1.r_1 ...\n#&gt;   SLX-9555.N712_S508.C89V9ANXX.s_1.r_1\n#&gt;   SLX-9555.N712_S517.C89V9ANXX.s_1.r_1\n#&gt; colData names(4): phenotype sum detected total\n#&gt; reducedDimNames(0):\n#&gt; mainExpName: NULL\n#&gt; altExpNames(0):\n\n\n\n3.3.3 其他元数据metadata\n\n一些分析包含不适合上述 slot 的结果或注释，例如研究元数据。 这可以存储在metadata slot中，这是任意对象的命名列表。 例如，假设有一些favorite_genes（例如，高度可变的基因），我们想将它们存储在其中，以便以后用于我们的分析。 我们只需将以下内容附加到元数据槽即可。\n\nCodemy_genes &lt;- c(\"gene_1\", \"gene_5\")\nmetadata(sce) &lt;- list(favorite_genes = my_genes)\nmetadata(sce)\n#&gt; $favorite_genes\n#&gt; [1] \"gene_1\" \"gene_5\"\nyour_genes &lt;- c(\"gene_4\", \"gene_8\")\nmetadata(sce)$your_genes &lt;- your_genes\nmetadata(sce)\n#&gt; $favorite_genes\n#&gt; [1] \"gene_1\" \"gene_5\"\n#&gt; \n#&gt; $your_genes\n#&gt; [1] \"gene_4\" \"gene_8\"\nsce\n#&gt; class: SingleCellExperiment \n#&gt; dim: 46603 96 \n#&gt; metadata(2): favorite_genes your_genes\n#&gt; assays(1): counts\n#&gt; rownames(46603): ENSMUSG00000102693 ENSMUSG00000064842 ...\n#&gt;   ENSMUSG00000096730 ENSMUSG00000095742\n#&gt; rowData names(6): gene_id gene_version ... gene_biotype\n#&gt;   havana_gene_version\n#&gt; colnames(96): SLX-9555.N701_S502.C89V9ANXX.s_1.r_1\n#&gt;   SLX-9555.N701_S503.C89V9ANXX.s_1.r_1 ...\n#&gt;   SLX-9555.N712_S508.C89V9ANXX.s_1.r_1\n#&gt;   SLX-9555.N712_S517.C89V9ANXX.s_1.r_1\n#&gt; colData names(4): phenotype sum detected total\n#&gt; reducedDimNames(0):\n#&gt; mainExpName: NULL\n#&gt; altExpNames(0):\n\n\n将内容存储在 metadata 中的主要缺点是，当取子集或组合时，它不会与行或列同步。"
  },
  {
    "objectID": "SCE.html#子集和组合",
    "href": "SCE.html#子集和组合",
    "title": "3  SingleCellExperiment结构",
    "section": "\n3.4 子集和组合",
    "text": "3.4 子集和组合\n\n3.4.1 子集\n\nCodefirst.10 &lt;- sce[,1:10]\nncol(counts(first.10)) #  计数矩阵仅有 10 列\n#&gt; [1] 10\ncolData(first.10) # only 10 rows.\n#&gt; DataFrame with 10 rows and 4 columns\n#&gt;                                                   phenotype       sum  detected\n#&gt;                                                 &lt;character&gt; &lt;numeric&gt; &lt;numeric&gt;\n#&gt; SLX-9555.N701_S502.C89V9ANXX.s_1.r_1    wild type phenotype    854171      7617\n#&gt; SLX-9555.N701_S503.C89V9ANXX.s_1.r_1    wild type phenotype   1044243      7520\n#&gt; SLX-9555.N701_S504.C89V9ANXX.s_1.r_1    wild type phenotype   1152450      8305\n#&gt; SLX-9555.N701_S505.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..   1193876      8142\n#&gt; SLX-9555.N701_S506.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..   1521472      7153\n#&gt; SLX-9555.N701_S507.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..    866705      6828\n#&gt; SLX-9555.N701_S508.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..    608581      6966\n#&gt; SLX-9555.N701_S517.C89V9ANXX.s_1.r_1    wild type phenotype   1113526      8634\n#&gt; SLX-9555.N702_S502.C89V9ANXX.s_1.r_1    wild type phenotype   1308250      8364\n#&gt; SLX-9555.N702_S503.C89V9ANXX.s_1.r_1    wild type phenotype    778605      8665\n#&gt;                                          total\n#&gt;                                      &lt;numeric&gt;\n#&gt; SLX-9555.N701_S502.C89V9ANXX.s_1.r_1    854171\n#&gt; SLX-9555.N701_S503.C89V9ANXX.s_1.r_1   1044243\n#&gt; SLX-9555.N701_S504.C89V9ANXX.s_1.r_1   1152450\n#&gt; SLX-9555.N701_S505.C89V9ANXX.s_1.r_1   1193876\n#&gt; SLX-9555.N701_S506.C89V9ANXX.s_1.r_1   1521472\n#&gt; SLX-9555.N701_S507.C89V9ANXX.s_1.r_1    866705\n#&gt; SLX-9555.N701_S508.C89V9ANXX.s_1.r_1    608581\n#&gt; SLX-9555.N701_S517.C89V9ANXX.s_1.r_1   1113526\n#&gt; SLX-9555.N702_S502.C89V9ANXX.s_1.r_1   1308250\n#&gt; SLX-9555.N702_S503.C89V9ANXX.s_1.r_1    778605\n\n\n只想要野生型细胞\n\nCodewt.only &lt;- sce[, sce$phenotype == \"wild type phenotype\"]\nncol(counts(wt.only))\n#&gt; [1] 48\ncolData(wt.only)\n#&gt; DataFrame with 48 rows and 4 columns\n#&gt;                                                phenotype       sum  detected\n#&gt;                                              &lt;character&gt; &lt;numeric&gt; &lt;numeric&gt;\n#&gt; SLX-9555.N701_S502.C89V9ANXX.s_1.r_1 wild type phenotype    854171      7617\n#&gt; SLX-9555.N701_S503.C89V9ANXX.s_1.r_1 wild type phenotype   1044243      7520\n#&gt; SLX-9555.N701_S504.C89V9ANXX.s_1.r_1 wild type phenotype   1152450      8305\n#&gt; SLX-9555.N701_S517.C89V9ANXX.s_1.r_1 wild type phenotype   1113526      8634\n#&gt; SLX-9555.N702_S502.C89V9ANXX.s_1.r_1 wild type phenotype   1308250      8364\n#&gt; ...                                                  ...       ...       ...\n#&gt; SLX-9555.N711_S517.C89V9ANXX.s_1.r_1 wild type phenotype   1317671      8581\n#&gt; SLX-9555.N712_S502.C89V9ANXX.s_1.r_1 wild type phenotype   1736189      9687\n#&gt; SLX-9555.N712_S503.C89V9ANXX.s_1.r_1 wild type phenotype   1521132      8983\n#&gt; SLX-9555.N712_S504.C89V9ANXX.s_1.r_1 wild type phenotype   1759166      8480\n#&gt; SLX-9555.N712_S517.C89V9ANXX.s_1.r_1 wild type phenotype   1436899      8469\n#&gt;                                          total\n#&gt;                                      &lt;numeric&gt;\n#&gt; SLX-9555.N701_S502.C89V9ANXX.s_1.r_1    854171\n#&gt; SLX-9555.N701_S503.C89V9ANXX.s_1.r_1   1044243\n#&gt; SLX-9555.N701_S504.C89V9ANXX.s_1.r_1   1152450\n#&gt; SLX-9555.N701_S517.C89V9ANXX.s_1.r_1   1113526\n#&gt; SLX-9555.N702_S502.C89V9ANXX.s_1.r_1   1308250\n#&gt; ...                                        ...\n#&gt; SLX-9555.N711_S517.C89V9ANXX.s_1.r_1   1317671\n#&gt; SLX-9555.N712_S502.C89V9ANXX.s_1.r_1   1736189\n#&gt; SLX-9555.N712_S503.C89V9ANXX.s_1.r_1   1521132\n#&gt; SLX-9555.N712_S504.C89V9ANXX.s_1.r_1   1759166\n#&gt; SLX-9555.N712_S517.C89V9ANXX.s_1.r_1   1436899\n\n\n只想保留蛋白质编码基因\n\nCodecoding.only &lt;- sce[rowData(sce)$gene_biotype == \"protein_coding\",]\nnrow(counts(coding.only))\n#&gt; [1] 22013\nrowData(coding.only)\n#&gt; DataFrame with 22013 rows and 6 columns\n#&gt;                               gene_id gene_version      gene_name\n#&gt;                           &lt;character&gt;  &lt;character&gt;    &lt;character&gt;\n#&gt; ENSMUSG00000051951 ENSMUSG00000051951            5           Xkr4\n#&gt; ENSMUSG00000025900 ENSMUSG00000025900            9            Rp1\n#&gt; ENSMUSG00000025902 ENSMUSG00000025902           12          Sox17\n#&gt; ENSMUSG00000033845 ENSMUSG00000033845           12         Mrpl15\n#&gt; ENSMUSG00000025903 ENSMUSG00000025903           13         Lypla1\n#&gt; ...                               ...          ...            ...\n#&gt; ENSMUSG00000079808 ENSMUSG00000079808            3     AC168977.1\n#&gt; ENSMUSG00000095041 ENSMUSG00000095041            6           PISD\n#&gt; ENSMUSG00000063897 ENSMUSG00000063897            3          DHRSX\n#&gt; ENSMUSG00000096730 ENSMUSG00000096730            6       Vmn2r122\n#&gt; ENSMUSG00000095742 ENSMUSG00000095742            1 CAAA01147332.1\n#&gt;                       gene_source   gene_biotype havana_gene_version\n#&gt;                       &lt;character&gt;    &lt;character&gt;         &lt;character&gt;\n#&gt; ENSMUSG00000051951 ensembl_havana protein_coding                   2\n#&gt; ENSMUSG00000025900 ensembl_havana protein_coding                   2\n#&gt; ENSMUSG00000025902 ensembl_havana protein_coding                   6\n#&gt; ENSMUSG00000033845 ensembl_havana protein_coding                   3\n#&gt; ENSMUSG00000025903 ensembl_havana protein_coding                   3\n#&gt; ...                           ...            ...                 ...\n#&gt; ENSMUSG00000079808        ensembl protein_coding                  NA\n#&gt; ENSMUSG00000095041        ensembl protein_coding                  NA\n#&gt; ENSMUSG00000063897        ensembl protein_coding                  NA\n#&gt; ENSMUSG00000096730        ensembl protein_coding                  NA\n#&gt; ENSMUSG00000095742        ensembl protein_coding                  NA\n\n\n\n3.4.2 组合\n按列组合，假设所有涉及的对象都具有相同的行注释值和兼容的列注释字段\n\nCodesce2 &lt;- cbind(sce, sce)\nncol(counts(sce2)) # twice as many columns\n#&gt; [1] 192\ncolData(sce2) # twice as many rows\n#&gt; DataFrame with 192 rows and 4 columns\n#&gt;                                                   phenotype       sum  detected\n#&gt;                                                 &lt;character&gt; &lt;numeric&gt; &lt;numeric&gt;\n#&gt; SLX-9555.N701_S502.C89V9ANXX.s_1.r_1    wild type phenotype    854171      7617\n#&gt; SLX-9555.N701_S503.C89V9ANXX.s_1.r_1    wild type phenotype   1044243      7520\n#&gt; SLX-9555.N701_S504.C89V9ANXX.s_1.r_1    wild type phenotype   1152450      8305\n#&gt; SLX-9555.N701_S505.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..   1193876      8142\n#&gt; SLX-9555.N701_S506.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..   1521472      7153\n#&gt; ...                                                     ...       ...       ...\n#&gt; SLX-9555.N712_S505.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..    203221      5608\n#&gt; SLX-9555.N712_S506.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..   1059853      6948\n#&gt; SLX-9555.N712_S507.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..   1672343      6879\n#&gt; SLX-9555.N712_S508.C89V9ANXX.s_1.r_1 induced CBFB-MYH11 o..   1939537      7213\n#&gt; SLX-9555.N712_S517.C89V9ANXX.s_1.r_1    wild type phenotype   1436899      8469\n#&gt;                                          total\n#&gt;                                      &lt;numeric&gt;\n#&gt; SLX-9555.N701_S502.C89V9ANXX.s_1.r_1    854171\n#&gt; SLX-9555.N701_S503.C89V9ANXX.s_1.r_1   1044243\n#&gt; SLX-9555.N701_S504.C89V9ANXX.s_1.r_1   1152450\n#&gt; SLX-9555.N701_S505.C89V9ANXX.s_1.r_1   1193876\n#&gt; SLX-9555.N701_S506.C89V9ANXX.s_1.r_1   1521472\n#&gt; ...                                        ...\n#&gt; SLX-9555.N712_S505.C89V9ANXX.s_1.r_1    203221\n#&gt; SLX-9555.N712_S506.C89V9ANXX.s_1.r_1   1059853\n#&gt; SLX-9555.N712_S507.C89V9ANXX.s_1.r_1   1672343\n#&gt; SLX-9555.N712_S508.C89V9ANXX.s_1.r_1   1939537\n#&gt; SLX-9555.N712_S517.C89V9ANXX.s_1.r_1   1436899\n\n\n按行组合，假设所有对象都具有相同的列注释值和兼容的行注释字段。\n\nCodesce2 &lt;- rbind(sce, sce)\nnrow(counts(sce2)) # twice as many rows\n#&gt; [1] 93206\nrowData(sce2) # twice as many rows\n#&gt; DataFrame with 93206 rows and 6 columns\n#&gt;                               gene_id gene_version      gene_name\n#&gt;                           &lt;character&gt;  &lt;character&gt;    &lt;character&gt;\n#&gt; ENSMUSG00000102693 ENSMUSG00000102693            1  4933401J01Rik\n#&gt; ENSMUSG00000064842 ENSMUSG00000064842            1        Gm26206\n#&gt; ENSMUSG00000051951 ENSMUSG00000051951            5           Xkr4\n#&gt; ENSMUSG00000102851 ENSMUSG00000102851            1        Gm18956\n#&gt; ENSMUSG00000103377 ENSMUSG00000103377            1        Gm37180\n#&gt; ...                               ...          ...            ...\n#&gt; ENSMUSG00000094431 ENSMUSG00000094431            1 CAAA01205117.1\n#&gt; ENSMUSG00000094621 ENSMUSG00000094621            1 CAAA01098150.1\n#&gt; ENSMUSG00000098647 ENSMUSG00000098647            1 CAAA01064564.1\n#&gt; ENSMUSG00000096730 ENSMUSG00000096730            6       Vmn2r122\n#&gt; ENSMUSG00000095742 ENSMUSG00000095742            1 CAAA01147332.1\n#&gt;                       gene_source         gene_biotype havana_gene_version\n#&gt;                       &lt;character&gt;          &lt;character&gt;         &lt;character&gt;\n#&gt; ENSMUSG00000102693         havana                  TEC                   1\n#&gt; ENSMUSG00000064842        ensembl                snRNA                  NA\n#&gt; ENSMUSG00000051951 ensembl_havana       protein_coding                   2\n#&gt; ENSMUSG00000102851         havana processed_pseudogene                   1\n#&gt; ENSMUSG00000103377         havana                  TEC                   1\n#&gt; ...                           ...                  ...                 ...\n#&gt; ENSMUSG00000094431        ensembl                miRNA                  NA\n#&gt; ENSMUSG00000094621        ensembl                miRNA                  NA\n#&gt; ENSMUSG00000098647        ensembl                miRNA                  NA\n#&gt; ENSMUSG00000096730        ensembl       protein_coding                  NA\n#&gt; ENSMUSG00000095742        ensembl       protein_coding                  NA"
  },
  {
    "objectID": "SCE.html#单细胞特异性字段",
    "href": "SCE.html#单细胞特异性字段",
    "title": "3  SingleCellExperiment结构",
    "section": "\n3.5 单细胞特异性字段",
    "text": "3.5 单细胞特异性字段\n\n3.5.1 降维 reducedDims\n\n使用 scater中的函数计算 PCA 、t-SNE\n\nPCAsce\n#&gt; class: SingleCellExperiment \n#&gt; dim: 46603 96 \n#&gt; metadata(2): favorite_genes your_genes\n#&gt; assays(1): counts\n#&gt; rownames(46603): ENSMUSG00000102693 ENSMUSG00000064842 ...\n#&gt;   ENSMUSG00000096730 ENSMUSG00000095742\n#&gt; rowData names(6): gene_id gene_version ... gene_biotype\n#&gt;   havana_gene_version\n#&gt; colnames(96): SLX-9555.N701_S502.C89V9ANXX.s_1.r_1\n#&gt;   SLX-9555.N701_S503.C89V9ANXX.s_1.r_1 ...\n#&gt;   SLX-9555.N712_S508.C89V9ANXX.s_1.r_1\n#&gt;   SLX-9555.N712_S517.C89V9ANXX.s_1.r_1\n#&gt; colData names(4): phenotype sum detected total\n#&gt; reducedDimNames(0):\n#&gt; mainExpName: NULL\n#&gt; altExpNames(0):\nsce &lt;- scater::logNormCounts(sce)\nsce &lt;- scater::runPCA(sce)\ndim(reducedDim(sce, \"PCA\"))\n#&gt; [1] 96 50\n\n\n\nTSNEsce &lt;- scater::runTSNE(sce, perplexity = 0.1)\n#&gt; Perplexity should be lower than K!\nhead(reducedDim(sce, \"TSNE\"))\n#&gt;                                          TSNE1      TSNE2\n#&gt; SLX-9555.N701_S502.C89V9ANXX.s_1.r_1  738.1649 -1110.3044\n#&gt; SLX-9555.N701_S503.C89V9ANXX.s_1.r_1 1281.8292   322.2412\n#&gt; SLX-9555.N701_S504.C89V9ANXX.s_1.r_1  148.5622  -586.3183\n#&gt; SLX-9555.N701_S505.C89V9ANXX.s_1.r_1  284.2328  1202.9393\n#&gt; SLX-9555.N701_S506.C89V9ANXX.s_1.r_1 1078.5431  -823.2405\n#&gt; SLX-9555.N701_S507.C89V9ANXX.s_1.r_1  886.4592   891.2774\n\n\n\nUMAPsce &lt;- scater::runUMAP(sce)\nhead(reducedDim(sce,\"UMAP\"))\n#&gt;                                          UMAP1      UMAP2\n#&gt; SLX-9555.N701_S502.C89V9ANXX.s_1.r_1  3.528867 -0.7216227\n#&gt; SLX-9555.N701_S503.C89V9ANXX.s_1.r_1  2.299313 -0.6142628\n#&gt; SLX-9555.N701_S504.C89V9ANXX.s_1.r_1  3.333331 -0.1422455\n#&gt; SLX-9555.N701_S505.C89V9ANXX.s_1.r_1  5.583685  0.6431451\n#&gt; SLX-9555.N701_S506.C89V9ANXX.s_1.r_1 -5.415229 -0.5999737\n#&gt; SLX-9555.N701_S507.C89V9ANXX.s_1.r_1 -5.792887 -0.2606258\n\n\n\n手动UMAPu &lt;- uwot::umap(t(logcounts(sce)), n_neighbors = 2)\nreducedDim(sce, \"UMAP_uwot\") &lt;- u\nreducedDims(sce) # Now stored in the object.\n#&gt; List of length 4\n#&gt; names(4): PCA TSNE UMAP UMAP_uwot\nhead(reducedDim(sce, \"UMAP_uwot\"))\n#&gt;                                           [,1]      [,2]\n#&gt; SLX-9555.N701_S502.C89V9ANXX.s_1.r_1  5.215251 -3.220121\n#&gt; SLX-9555.N701_S503.C89V9ANXX.s_1.r_1  3.967518 -4.576974\n#&gt; SLX-9555.N701_S504.C89V9ANXX.s_1.r_1  4.660270 -3.865929\n#&gt; SLX-9555.N701_S505.C89V9ANXX.s_1.r_1  5.789511  2.994096\n#&gt; SLX-9555.N701_S506.C89V9ANXX.s_1.r_1 -4.037257  8.130183\n#&gt; SLX-9555.N701_S507.C89V9ANXX.s_1.r_1 -1.402587  5.372429\n\n\n\nreduceDims()reducedDims(sce) \n#&gt; List of length 4\n#&gt; names(4): PCA TSNE UMAP UMAP_uwot\n\n\n\n3.5.2 替代试验 Alternative Experiments\n该类SingleCellExperiment提供了”替代实验”的概念，其是一组不同特征但同一组样本/细胞的数据。经典应用是存储加标转录物spike-in transcripts的每细胞计数;这使我们能够保留这些数据以供下游使用，但要将其与保存的内源性基因计数分离。 分离尤为重要，因为此类替代特征通常需要单独处理。\n\nCodedf &lt;- read_tsv(\"data/counts_Calero_20160113.tsv\")\nspike.df &lt;- df[str_detect(df$GeneID,\"^ERCC-\"),] #正则表达式，查询外源RNA\nspike.mat&lt;- as.matrix(spike.df[,-1]) \nrow.names(spike.mat)&lt;-spike.df$GeneID\n\n\n如果我们有一些加标转录本的数据，我们首先创建一个单独的对象SummarizedExperiment\n\nCodespike_se &lt;- SummarizedExperiment(list(counts=spike.mat[,-1]))\nspike_se\n#&gt; class: SummarizedExperiment \n#&gt; dim: 92 96 \n#&gt; metadata(0):\n#&gt; assays(1): counts\n#&gt; rownames(92): ERCC-00002 ERCC-00003 ... ERCC-00170 ERCC-00171\n#&gt; rowData names(0):\n#&gt; colnames(96): SLX-9555.N701_S502.C89V9ANXX.s_1.r_1\n#&gt;   SLX-9555.N701_S503.C89V9ANXX.s_1.r_1 ...\n#&gt;   SLX-9555.N712_S508.C89V9ANXX.s_1.r_1\n#&gt;   SLX-9555.N712_S517.C89V9ANXX.s_1.r_1\n#&gt; colData names(0):\n\n\n\nCodealtExp(sce, \"spike\") &lt;- spike_se\n\naltExps(sce) #检索\n#&gt; List of length 1\n#&gt; names(1): spike\n\n\n替代实验概念确保单细胞数据集的所有相关方面都可以保存在单个对象中，并且确保我们的加标数据与内源性基因的数据同步。\n\nCodesub &lt;- sce[,1:2] # retain only two samples.\naltExp(sub, \"spike\")\n#&gt; class: SummarizedExperiment \n#&gt; dim: 92 2 \n#&gt; metadata(0):\n#&gt; assays(1): counts\n#&gt; rownames(92): ERCC-00002 ERCC-00003 ... ERCC-00170 ERCC-00171\n#&gt; rowData names(0):\n#&gt; colnames(2): SLX-9555.N701_S502.C89V9ANXX.s_1.r_1\n#&gt;   SLX-9555.N701_S503.C89V9ANXX.s_1.r_1\n#&gt; colData names(0):\n\n\n任何SummarizedExperiment对象都可以存储为alternative Experiment, 包括另一个 SingleCellExperiment。\n\n3.5.3 大小因子sizeFactors\n\n\nCodesce &lt;- scran::computeSumFactors(sce)\nsummary(sizeFactors(sce))\n#&gt;    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#&gt;  0.1513  0.7417  0.9478  1.0000  1.1239  3.5583\n\n\n手动添加\n\nCodesizeFactors(sce) &lt;- scater::librarySizeFactors(sce)\nsummary(sizeFactors(sce))\n#&gt;    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#&gt;  0.1703  0.7657  0.9513  1.0000  1.1064  3.6050\n\n\n\n3.5.4 列标签\n该函数允许我们获取或设置每个细胞标签的向量或因子，通常对应于由无监督聚类分析的分组（basics第5章）。 或从分类算法预测细胞类型身份 （ basics第7章）\n\nCodecolLabels(sce) &lt;- scran::clusterCells(sce, use.dimred=\"PCA\")\ntable(colLabels(sce))\n#&gt; \n#&gt;  1  2 \n#&gt; 47 49"
  },
  {
    "objectID": "analysis.html#outline",
    "href": "analysis.html#outline",
    "title": "\n4  分析概述\n",
    "section": "\n4.1 outline",
    "text": "4.1 outline\n本章概述了典型scRNA-seq分析工作流程的框架（图 4.1）\n\n\n图 4.1: 典型 scRNA-seq 分析工作流程示意图。每个阶段（用虚线分隔）由许多特定步骤组成，其中许多步骤对实例进行操作和修改"
  },
  {
    "objectID": "analysis.html#快速入门简单",
    "href": "analysis.html#快速入门简单",
    "title": "\n4  分析概述\n",
    "section": "\n4.2 快速入门（简单）",
    "text": "4.2 快速入门（简单）\n原书使用来自Macosko等人（2015）的基于液滴的视网膜数据集，该数据集在scRNAseq包中提供。\n从计数矩阵开始，以聚类结束( 图 4.1 )。\n\n数据集信息library(scRNAseq)\nsce &lt;- MacoskoRetinaData()\nsce\n#&gt; class: SingleCellExperiment \n#&gt; dim: 24658 49300 \n#&gt; metadata(0):\n#&gt; assays(1): counts\n#&gt; rownames(24658): KITL TMTC3 ... 1110059M19RIK GM20861\n#&gt; rowData names(0):\n#&gt; colnames(49300): r1_GGCCGCAGTCCG r1_CTTGTGCGGGAA ... p1_TAACGCGCTCCT\n#&gt;   p1_ATTCTTGTTCTT\n#&gt; colData names(2): cell.id cluster\n#&gt; reducedDimNames(0):\n#&gt; mainExpName: NULL\n#&gt; altExpNames(0):\ncounts &lt;- assay(sce, \"counts\")\ncolData(sce)\n#&gt; DataFrame with 49300 rows and 2 columns\n#&gt;                         cell.id   cluster\n#&gt;                     &lt;character&gt; &lt;integer&gt;\n#&gt; r1_GGCCGCAGTCCG r1_GGCCGCAGTCCG         2\n#&gt; r1_CTTGTGCGGGAA r1_CTTGTGCGGGAA         2\n#&gt; r1_GCGCAACTGCTC r1_GCGCAACTGCTC         2\n#&gt; r1_GATTGGGAGGCA r1_GATTGGGAGGCA         2\n#&gt; r1_CCTCCTAGTTGG r1_CCTCCTAGTTGG        NA\n#&gt; ...                         ...       ...\n#&gt; p1_TCAAAAGCCGGG p1_TCAAAAGCCGGG        24\n#&gt; p1_ATTAAGTTCCAA p1_ATTAAGTTCCAA        34\n#&gt; p1_CTGTCTGAGACC p1_CTGTCTGAGACC         2\n#&gt; p1_TAACGCGCTCCT p1_TAACGCGCTCCT        24\n#&gt; p1_ATTCTTGTTCTT p1_ATTCTTGTTCTT        24\n\n\n\n质量控制# Quality control (using mitochondrial genes)线粒体基因\nlibrary(scater)\nis.mito &lt;- str_detect(rownames(sce),\"^MT-\") \nsum(is.mito) # 31个\n#&gt; [1] 31\n\n#?perCellQCMetrics\nperCellQCMetrics(sce)\n#&gt; DataFrame with 49300 rows and 3 columns\n#&gt;                       sum  detected     total\n#&gt;                 &lt;numeric&gt; &lt;integer&gt; &lt;numeric&gt;\n#&gt; r1_GGCCGCAGTCCG     37487      7243     37487\n#&gt; r1_CTTGTGCGGGAA     32047      6933     32047\n#&gt; r1_GCGCAACTGCTC     28148      6397     28148\n#&gt; r1_GATTGGGAGGCA     20367      5740     20367\n#&gt; r1_CCTCCTAGTTGG     19560      5779     19560\n#&gt; ...                   ...       ...       ...\n#&gt; p1_TCAAAAGCCGGG       817       537       817\n#&gt; p1_ATTAAGTTCCAA       817       574       817\n#&gt; p1_CTGTCTGAGACC       817       637       817\n#&gt; p1_TAACGCGCTCCT       816       488       816\n#&gt; p1_ATTCTTGTTCTT       816       484       816\nqcstats &lt;- perCellQCMetrics(sce, subsets=list(Mito=is.mito))\nqcstats\n#&gt; DataFrame with 49300 rows and 6 columns\n#&gt;                       sum  detected subsets_Mito_sum subsets_Mito_detected\n#&gt;                 &lt;numeric&gt; &lt;integer&gt;        &lt;numeric&gt;             &lt;integer&gt;\n#&gt; r1_GGCCGCAGTCCG     37487      7243              427                    14\n#&gt; r1_CTTGTGCGGGAA     32047      6933              503                    15\n#&gt; r1_GCGCAACTGCTC     28148      6397              460                    13\n#&gt; r1_GATTGGGAGGCA     20367      5740              326                    11\n#&gt; r1_CCTCCTAGTTGG     19560      5779              264                     9\n#&gt; ...                   ...       ...              ...                   ...\n#&gt; p1_TCAAAAGCCGGG       817       537               13                     4\n#&gt; p1_ATTAAGTTCCAA       817       574               10                     5\n#&gt; p1_CTGTCTGAGACC       817       637               24                     7\n#&gt; p1_TAACGCGCTCCT       816       488               27                     5\n#&gt; p1_ATTCTTGTTCTT       816       484               16                     4\n#&gt;                 subsets_Mito_percent     total\n#&gt;                            &lt;numeric&gt; &lt;numeric&gt;\n#&gt; r1_GGCCGCAGTCCG              1.13906     37487\n#&gt; r1_CTTGTGCGGGAA              1.56957     32047\n#&gt; r1_GCGCAACTGCTC              1.63422     28148\n#&gt; r1_GATTGGGAGGCA              1.60063     20367\n#&gt; r1_CCTCCTAGTTGG              1.34969     19560\n#&gt; ...                              ...       ...\n#&gt; p1_TCAAAAGCCGGG              1.59119       817\n#&gt; p1_ATTAAGTTCCAA              1.22399       817\n#&gt; p1_CTGTCTGAGACC              2.93758       817\n#&gt; p1_TAACGCGCTCCT              3.30882       816\n#&gt; p1_ATTCTTGTTCTT              1.96078       816\n\n#?quickPerCellQC\nquickPerCellQC(sce) |&gt; colData()\n#&gt; DataFrame with 49287 rows and 8 columns\n#&gt;                         cell.id   cluster       sum  detected     total\n#&gt;                     &lt;character&gt; &lt;integer&gt; &lt;numeric&gt; &lt;integer&gt; &lt;numeric&gt;\n#&gt; r1_GGCCGCAGTCCG r1_GGCCGCAGTCCG         2     37487      7243     37487\n#&gt; r1_CTTGTGCGGGAA r1_CTTGTGCGGGAA         2     32047      6933     32047\n#&gt; r1_GCGCAACTGCTC r1_GCGCAACTGCTC         2     28148      6397     28148\n#&gt; r1_GATTGGGAGGCA r1_GATTGGGAGGCA         2     20367      5740     20367\n#&gt; r1_CCTCCTAGTTGG r1_CCTCCTAGTTGG        NA     19560      5779     19560\n#&gt; ...                         ...       ...       ...       ...       ...\n#&gt; p1_TCAAAAGCCGGG p1_TCAAAAGCCGGG        24       817       537       817\n#&gt; p1_ATTAAGTTCCAA p1_ATTAAGTTCCAA        34       817       574       817\n#&gt; p1_CTGTCTGAGACC p1_CTGTCTGAGACC         2       817       637       817\n#&gt; p1_TAACGCGCTCCT p1_TAACGCGCTCCT        24       816       488       816\n#&gt; p1_ATTCTTGTTCTT p1_ATTCTTGTTCTT        24       816       484       816\n#&gt;                     low_lib_size   low_n_features   discard\n#&gt;                 &lt;outlier.filter&gt; &lt;outlier.filter&gt; &lt;logical&gt;\n#&gt; r1_GGCCGCAGTCCG            FALSE            FALSE     FALSE\n#&gt; r1_CTTGTGCGGGAA            FALSE            FALSE     FALSE\n#&gt; r1_GCGCAACTGCTC            FALSE            FALSE     FALSE\n#&gt; r1_GATTGGGAGGCA            FALSE            FALSE     FALSE\n#&gt; r1_CCTCCTAGTTGG            FALSE            FALSE     FALSE\n#&gt; ...                          ...              ...       ...\n#&gt; p1_TCAAAAGCCGGG            FALSE            FALSE     FALSE\n#&gt; p1_ATTAAGTTCCAA            FALSE            FALSE     FALSE\n#&gt; p1_CTGTCTGAGACC            FALSE            FALSE     FALSE\n#&gt; p1_TAACGCGCTCCT            FALSE            FALSE     FALSE\n#&gt; p1_ATTCTTGTTCTT            FALSE            FALSE     FALSE\nquickPerCellQC(qcstats)\n#&gt; DataFrame with 49300 rows and 3 columns\n#&gt;           low_lib_size   low_n_features   discard\n#&gt;       &lt;outlier.filter&gt; &lt;outlier.filter&gt; &lt;logical&gt;\n#&gt; 1                FALSE            FALSE     FALSE\n#&gt; 2                FALSE            FALSE     FALSE\n#&gt; 3                FALSE            FALSE     FALSE\n#&gt; 4                FALSE            FALSE     FALSE\n#&gt; 5                FALSE            FALSE     FALSE\n#&gt; ...                ...              ...       ...\n#&gt; 49296            FALSE            FALSE     FALSE\n#&gt; 49297            FALSE            FALSE     FALSE\n#&gt; 49298            FALSE            FALSE     FALSE\n#&gt; 49299            FALSE            FALSE     FALSE\n#&gt; 49300            FALSE            FALSE     FALSE\nfiltered &lt;- quickPerCellQC(qcstats, percent_subsets=\"subsets_Mito_percent\")\nfiltered\n#&gt; DataFrame with 49300 rows and 4 columns\n#&gt;           low_lib_size   low_n_features high_subsets_Mito_percent   discard\n#&gt;       &lt;outlier.filter&gt; &lt;outlier.filter&gt;          &lt;outlier.filter&gt; &lt;logical&gt;\n#&gt; 1                FALSE            FALSE                     FALSE     FALSE\n#&gt; 2                FALSE            FALSE                     FALSE     FALSE\n#&gt; 3                FALSE            FALSE                     FALSE     FALSE\n#&gt; 4                FALSE            FALSE                     FALSE     FALSE\n#&gt; 5                FALSE            FALSE                     FALSE     FALSE\n#&gt; ...                ...              ...                       ...       ...\n#&gt; 49296            FALSE            FALSE                     FALSE     FALSE\n#&gt; 49297            FALSE            FALSE                     FALSE     FALSE\n#&gt; 49298            FALSE            FALSE                     FALSE     FALSE\n#&gt; 49299            FALSE            FALSE                     FALSE     FALSE\n#&gt; 49300            FALSE            FALSE                     FALSE     FALSE\nsce &lt;- sce[, !filtered$discard] # discard 丢弃\nsce\n#&gt; class: SingleCellExperiment \n#&gt; dim: 24658 45877 \n#&gt; metadata(0):\n#&gt; assays(1): counts\n#&gt; rownames(24658): KITL TMTC3 ... 1110059M19RIK GM20861\n#&gt; rowData names(0):\n#&gt; colnames(45877): r1_GGCCGCAGTCCG r1_CTTGTGCGGGAA ... p1_TAACGCGCTCCT\n#&gt;   p1_ATTCTTGTTCTT\n#&gt; colData names(2): cell.id cluster\n#&gt; reducedDimNames(0):\n#&gt; mainExpName: NULL\n#&gt; altExpNames(0):\n\n\n\nNormalizationlibrary(scuttle)\nsce &lt;- logNormCounts(sce)\nassays(sce)\n#&gt; List of length 2\n#&gt; names(2): counts logcounts\n\n\n\nFeature selectionlibrary(scran)\ndec &lt;- modelGeneVar(sce)  # ?modelGeneVar  对每个基因的对数表达谱的方差进行建模，根据拟合的均值-方差趋势将其分解为技术和生物学成分。\ndec\n#&gt; DataFrame with 24658 rows and 6 columns\n#&gt;                      mean       total        tech          bio   p.value\n#&gt;                 &lt;numeric&gt;   &lt;numeric&gt;   &lt;numeric&gt;    &lt;numeric&gt; &lt;numeric&gt;\n#&gt; KITL           0.00884872 0.011881960 0.011546899  3.35060e-04 0.4118020\n#&gt; TMTC3          0.05143737 0.075214907 0.066708042  8.50687e-03 0.1636316\n#&gt; CEP290         0.57977970 0.841422026 0.689765311  1.51657e-01 0.0456074\n#&gt; 4930430F08RIK  0.05284121 0.069214001 0.068514734  6.99267e-04 0.4687536\n#&gt; 1700017N19RIK  0.00047060 0.000537273 0.000614846 -7.75727e-05 0.8337798\n#&gt; ...                   ...         ...         ...          ...       ...\n#&gt; VSIG1         7.47516e-06 2.56352e-06 9.76708e-06 -7.20357e-06         1\n#&gt; GM16390       0.00000e+00 0.00000e+00 0.00000e+00  0.00000e+00       NaN\n#&gt; GM25207       3.60098e-06 5.94891e-07 4.70506e-06 -4.11017e-06         1\n#&gt; 1110059M19RIK 0.00000e+00 0.00000e+00 0.00000e+00  0.00000e+00       NaN\n#&gt; GM20861       0.00000e+00 0.00000e+00 0.00000e+00  0.00000e+00       NaN\n#&gt;                     FDR\n#&gt;               &lt;numeric&gt;\n#&gt; KITL           1.000000\n#&gt; TMTC3          1.000000\n#&gt; CEP290         0.791672\n#&gt; 4930430F08RIK  1.000000\n#&gt; 1700017N19RIK  1.000000\n#&gt; ...                 ...\n#&gt; VSIG1                 1\n#&gt; GM16390             NaN\n#&gt; GM25207               1\n#&gt; 1110059M19RIK       NaN\n#&gt; GM20861             NaN\nhvg &lt;- getTopHVGs(dec, prop=0.1) # ?getTopHVGs 根据 modelGeneVar() 或相关函数的方差建模统计数据，定义一组高度可变的基因。\nlength(hvg)\n#&gt; [1] 914\n\n\n\n数据降维### PCA\nlibrary(scater)\nset.seed(1234)\nsce &lt;- runPCA(sce, ncomponents=25, subset_row=hvg)\ndim(reducedDim(sce,\"PCA\"))\n#&gt; [1] 45877    25\n\n### Clustering\nlibrary(bluster)\ncolLabels(sce) &lt;- clusterCells(sce, use.dimred='PCA',\n                               BLUSPARAM=NNGraphParam(cluster.fun=\"louvain\"))\ntable(colLabels(sce))\n#&gt; \n#&gt;    1    2    3    4    5    6    7    8    9   10   11   12   13 \n#&gt; 3515 2360  182 4519 1889 2599  193 6501  496 2735 6154 5210 9524\n\n\n\n可视化sce &lt;- runUMAP(sce, dimred = 'PCA')\nplotUMAP(sce, colour_by=\"label\")\n\n\n\n图 4.2: 视网膜数据集的UMAP 图，其中每个点都是一个细胞，并由分配的聚类标识着色。\n\n\n\n\nMarker detectionmarkers &lt;- findMarkers(sce, test.type=\"wilcox\", direction=\"up\", lfc=1)# ?findMarkers 通过检测细胞组配对之间的差异表达，找到细胞组（如聚类）的候选标记基因。"
  },
  {
    "objectID": "analysis.html#快速开始多批次",
    "href": "analysis.html#快速开始多批次",
    "title": "\n4  分析概述\n",
    "section": "\n4.3 快速开始（多批次）",
    "text": "4.3 快速开始（多批次）\n工作流第 8 章中提供了对同一数据集的更详细分析以及每个步骤的理由。\n\nCode\nsce1 &lt;- SegerstolpePancreasData()\n\n# Quality control (using ERCCs).\nqcstats1 &lt;- perCellQCMetrics(sce1)\nfiltered1 &lt;- quickPerCellQC(qcstats1, percent_subsets=\"altexps_ERCC_percent\")\nsce1 &lt;- sce1[, !filtered1$discard]\n\n# Normalization.\nsce1 &lt;- logNormCounts(sce1)\n\n# Feature selection, blocking on the individual of origin.\ndec1 &lt;- modelGeneVar(sce1, block=sce1$individual)\nhvg1 &lt;- getTopHVGs(dec1, prop=0.1)\n\n# Batch correction.\nlibrary(batchelor)\nset.seed(1234)\nsce1 &lt;- correctExperiments(sce1, batch=sce1$individual, \n    subset.row=hvg1, correct.all=TRUE)\n\n# Clustering.\ncolLabels(sce1) &lt;- clusterCells(sce1, use.dimred='corrected')\ntable(colLabels(sce1))\n#&gt; \n#&gt;   1   2   3   4   5   6   7   8   9  10  11  12 \n#&gt; 462  61 138 104 283  70 968 216  36 116  10  22\n\n\n\n可视化sce1 &lt;- runUMAP(sce1, dimred = 'corrected')\nplotUMAP(sce1, colour_by=\"label\")\nplotUMAP(sce1, colour_by=\"individual\")\n\n\n\n\n\n(a) 根据聚类标记\n\n\n\n\n\n(b) 根据起源个体\n\n\n\n图 4.3: 胰腺数据集的 UMAP 图，其中每个点都是一个细胞，并由分配的聚类标识（左）或起源个体（右）着色。\n\n\n\n\nCode# Marker detection, blocking on the individual of origin.\nmarkers1 &lt;- findMarkers(sce1, test.type=\"wilcox\", direction=\"up\", lfc=1)"
  },
  {
    "objectID": "basics.html",
    "href": "basics.html",
    "title": "Basics",
    "section": "",
    "text": "第二部分 Basics"
  },
  {
    "objectID": "QC.html#qc-metrics",
    "href": "QC.html#qc-metrics",
    "title": "\n5  质量控制\n",
    "section": "\n5.1 QC metrics",
    "text": "5.1 QC metrics\n\nThe library size is defined as the total sum of counts across all relevant features for each cell. Cells with small library sizes are of low quality.库大小定义为每个细胞所有基因的计数总和。\nThe number of expressed features in each cell is defined as the number of endogenous genes with non-zero counts for that cell. Any cell with very few expressed genes is likely to be of poor quality. 每个细胞中表达特征的数量被定义为该细胞具有非零计数的内源性基因的数量。\nThe proportion of reads mapped to spike-in transcripts is calculated relative to the total count across all features (including spike-ins) for each cell.High proportions are indicative of poor-quality cells。 相对于每个细胞所有特征（包括加标）的总计数，计算映射到加标转录物中的读数比例。高比例表示细胞质量差\nIn the absence of spike-in transcripts, the proportion of reads mapped to genes in the mitochondrial genome can be used. High proportions are indicative of poor-quality cells。在没有加标转录物的情况下，可以使用映射到线粒体基因组中基因的读数比例。高比例表示细胞质量差。\n\n对于每个细胞，我们使用 scater 包中的函数perCellQCMetrics()计算这些 QC 指标,该列sum包含每个细胞文库大小的总计数，该列detected包含检测到的基因数。 该列subsets_Mito_percent包含映射到线粒体转录本的读取百分比，该列altexps_ERCC_percent包含映射到 ERCC 转录本的读取百分比。\n\nCodesce.416b\n#&gt; class: SingleCellExperiment \n#&gt; dim: 46604 192 \n#&gt; metadata(0):\n#&gt; assays(1): counts\n#&gt; rownames(46604): ENSMUSG00000102693 ENSMUSG00000064842 ...\n#&gt;   ENSMUSG00000095742 CBFB-MYH11-mcherry\n#&gt; rowData names(1): Length\n#&gt; colnames(192): SLX-9555.N701_S502.C89V9ANXX.s_1.r_1\n#&gt;   SLX-9555.N701_S503.C89V9ANXX.s_1.r_1 ...\n#&gt;   SLX-11312.N712_S508.H5H5YBBXX.s_8.r_1\n#&gt;   SLX-11312.N712_S517.H5H5YBBXX.s_8.r_1\n#&gt; colData names(9): Source Name cell line ... spike-in addition block\n#&gt; reducedDimNames(0):\n#&gt; mainExpName: endogenous\n#&gt; altExpNames(2): ERCC SIRV\nlocation &lt;- SummarizedExperiment::rowRanges(sce.416b)\nlocation\n#&gt; GRangesList object of length 46604:\n#&gt; $ENSMUSG00000102693\n#&gt; GRanges object with 1 range and 0 metadata columns:\n#&gt;       seqnames          ranges strand\n#&gt;          &lt;Rle&gt;       &lt;IRanges&gt;  &lt;Rle&gt;\n#&gt;   [1]        1 3073253-3074322      +\n#&gt;   -------\n#&gt;   seqinfo: 118 sequences (1 circular) from GRCm38 genome\n#&gt; \n#&gt; $ENSMUSG00000064842\n#&gt; GRanges object with 1 range and 0 metadata columns:\n#&gt;       seqnames          ranges strand\n#&gt;          &lt;Rle&gt;       &lt;IRanges&gt;  &lt;Rle&gt;\n#&gt;   [1]        1 3102016-3102125      +\n#&gt;   -------\n#&gt;   seqinfo: 118 sequences (1 circular) from GRCm38 genome\n#&gt; \n#&gt; $ENSMUSG00000051951\n#&gt; GRanges object with 1 range and 0 metadata columns:\n#&gt;       seqnames          ranges strand\n#&gt;          &lt;Rle&gt;       &lt;IRanges&gt;  &lt;Rle&gt;\n#&gt;   [1]        1 3205901-3671498      -\n#&gt;   -------\n#&gt;   seqinfo: 118 sequences (1 circular) from GRCm38 genome\n#&gt; \n#&gt; ...\n#&gt; &lt;46601 more elements&gt;\nis.mito &lt;- any(seqnames(location)==\"MT\")\n\nlibrary(scuttle)\ndf &lt;- perCellQCMetrics(sce.416b, subsets=list(Mito=is.mito))\ncolnames(df)\n#&gt;  [1] \"sum\"                   \"detected\"              \"subsets_Mito_sum\"     \n#&gt;  [4] \"subsets_Mito_detected\" \"subsets_Mito_percent\"  \"altexps_ERCC_sum\"     \n#&gt;  [7] \"altexps_ERCC_detected\" \"altexps_ERCC_percent\"  \"altexps_SIRV_sum\"     \n#&gt; [10] \"altexps_SIRV_detected\" \"altexps_SIRV_percent\"  \"total\"\nsummary(df$sum)\n#&gt;    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#&gt;   27084  856350 1111252 1165865 1328301 4398883\nsummary(df$altexps_ERCC_percent)\n#&gt;    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#&gt;   2.242   4.291   6.031   6.412   8.126  19.429\n\n\n或者 addPerCellQC()计算每个细胞的 QC 统计数据并将其附加到对象的colData 允许我们将所有相关信息保留在单个对象SingleCellExperiment中以供以后操作。\n\nCodesce.416b &lt;- addPerCellQCMetrics(sce.416b, subsets=list(Mito=is.mito))\ndim(colData(sce.416b))\n#&gt; [1] 192  21\ncolnames(colData(sce.416b))\n#&gt;  [1] \"Source Name\"              \"cell line\"               \n#&gt;  [3] \"cell type\"                \"single cell well quality\"\n#&gt;  [5] \"genotype\"                 \"phenotype\"               \n#&gt;  [7] \"strain\"                   \"spike-in addition\"       \n#&gt;  [9] \"block\"                    \"sum\"                     \n#&gt; [11] \"detected\"                 \"subsets_Mito_sum\"        \n#&gt; [13] \"subsets_Mito_detected\"    \"subsets_Mito_percent\"    \n#&gt; [15] \"altexps_ERCC_sum\"         \"altexps_ERCC_detected\"   \n#&gt; [17] \"altexps_ERCC_percent\"     \"altexps_SIRV_sum\"        \n#&gt; [19] \"altexps_SIRV_detected\"    \"altexps_SIRV_percent\"    \n#&gt; [21] \"total\"\nsce.416b\n#&gt; class: SingleCellExperiment \n#&gt; dim: 46604 192 \n#&gt; metadata(0):\n#&gt; assays(1): counts\n#&gt; rownames(46604): ENSMUSG00000102693 ENSMUSG00000064842 ...\n#&gt;   ENSMUSG00000095742 CBFB-MYH11-mcherry\n#&gt; rowData names(1): Length\n#&gt; colnames(192): SLX-9555.N701_S502.C89V9ANXX.s_1.r_1\n#&gt;   SLX-9555.N701_S503.C89V9ANXX.s_1.r_1 ...\n#&gt;   SLX-11312.N712_S508.H5H5YBBXX.s_8.r_1\n#&gt;   SLX-11312.N712_S517.H5H5YBBXX.s_8.r_1\n#&gt; colData names(21): Source Name cell line ... altexps_SIRV_percent total\n#&gt; reducedDimNames(0):\n#&gt; mainExpName: endogenous\n#&gt; altExpNames(2): ERCC SIRV"
  },
  {
    "objectID": "QC.html#识别低质量细胞",
    "href": "QC.html#识别低质量细胞",
    "title": "\n5  质量控制\n",
    "section": "\n5.2 识别低质量细胞",
    "text": "5.2 识别低质量细胞\n\n5.2.1 固定阈值\n识别低质量细胞的最简单方法是对 QC 指标应用固定阈值。 例如，如果细胞的文库大小低于 100,000 次读取;表达少于5,000个基因;峰值比例超过10%;或线粒体比例高于10%，我们可能会认为它们的质量较低。\n\nCodeqc.lib &lt;- df$sum &lt; 1e5\nqc.nexprs &lt;- df$detected &lt; 5e3\nqc.spike &lt;- df$altexps_ERCC_percent &gt; 10\nqc.mito &lt;- df$subsets_Mito_percent &gt; 10\ndiscard &lt;- qc.lib | qc.nexprs | qc.spike | qc.mito\n\n# 汇总\ntibble(LibSize=sum(qc.lib), NExprs=sum(qc.nexprs),\n    SpikeProp=sum(qc.spike), MitoProp=sum(qc.mito), Total=sum(discard))\n\n\n\n\nLibSize\nNExprs\nSpikeProp\nMitoProp\nTotal\n\n\n3\n0\n19\n14\n33\n\n\n\n\n\n\n5.2.2 自适应阈值\n假设大部分数据集由高质量的细胞组成，然后，我们根据所有细胞中每个指标的中位数绝对偏差（median absolute deviation ，MAD）来识别各种QC指标的异常值细胞。默认情况下，如果一个值在”有问题”的方向上距离中位数超过3个MAD，我们将其视为异常值。即此类过滤器将保留 99% 遵循正态分布的非异常值。\n\nCode#?perCellQCFilters\nreasons &lt;- perCellQCFilters(df, \n                            sub.fields=c(\"subsets_Mito_percent\",\n                                         \"altexps_ERCC_percent\"))\ncolSums(as.matrix(reasons)) # apply(as.matrix(reasons),2,sum)\n#&gt;              low_lib_size            low_n_features high_subsets_Mito_percent \n#&gt;                         4                         0                         2 \n#&gt; high_altexps_ERCC_percent                   discard \n#&gt;                         1                         6\nsummary(reasons$discard)\n#&gt;    Mode   FALSE    TRUE \n#&gt; logical     186       6\nattr(reasons$low_lib_size, \"thresholds\")\n#&gt;    lower   higher \n#&gt; 434082.9      Inf\nattr(reasons$low_n_features, \"thresholds\")\n#&gt;    lower   higher \n#&gt; 5231.468      Inf\n\n\n\n5.2.3 其他方法\n根据每个细胞的 QC 指标识别高维空间中的异常值\n\nCodestats &lt;- cbind(log10(df$sum), log10(df$detected),\n    df$subsets_Mito_percent, df$altexps_ERCC_percent)\n\nlibrary(robustbase)\noutlying &lt;- adjOutlyingness(stats, only.outlyingness = TRUE)\nmulti.outlier &lt;- isOutlier(outlying, type = \"higher\")\nsummary(multi.outlier)\n#&gt;    Mode   FALSE    TRUE \n#&gt; logical     182      10"
  },
  {
    "objectID": "QC.html#检查诊断图",
    "href": "QC.html#检查诊断图",
    "title": "\n5  质量控制\n",
    "section": "\n5.3 检查诊断图",
    "text": "5.3 检查诊断图\n\nCodecolData(sce.416b) &lt;- cbind(colData(sce.416b), df)\n\nsce.416b$block &lt;- factor(sce.416b$block)\nsce.416b$phenotype &lt;- ifelse(grepl(\"induced\", sce.416b$phenotype),\n    \"induced\", \"wild type\")\nsce.416b$discard &lt;- reasons$discard\n\nlibrary(scater)\ngridExtra::grid.arrange(\n    plotColData(sce.416b, x=\"block\", y=\"sum\", colour_by=\"discard\",\n        other_fields=\"phenotype\") + facet_wrap(~phenotype) + \n        scale_y_log10() + ggtitle(\"Total count\"),\n    plotColData(sce.416b, x=\"block\", y=\"detected\", colour_by=\"discard\", \n        other_fields=\"phenotype\") + facet_wrap(~phenotype) + \n        scale_y_log10() + ggtitle(\"Detected features\"),\n    plotColData(sce.416b, x=\"block\", y=\"subsets_Mito_percent\", \n        colour_by=\"discard\", other_fields=\"phenotype\") + \n        facet_wrap(~phenotype) + ggtitle(\"Mito percent\"),\n    plotColData(sce.416b, x=\"block\", y=\"altexps_ERCC_percent\", \n        colour_by=\"discard\", other_fields=\"phenotype\") + \n        facet_wrap(~phenotype) + ggtitle(\"ERCC percent\"),\n    ncol=1\n)\n\n\n\n图 5.1: 数据集中每个批次和表型的 QC 指标分布。每个点代表一个细胞，并分别根据其是否被丢弃而着色。\n\n\n\n另一个有用的诊断涉及绘制线粒体计数与其他一些 QC 指标的比例。 目的是确认没有细胞同时具有大量总计数和大量线粒体计数，以确保我们不会无意中去除恰好具有高度代谢活性的高质量细胞（例如肝细胞）。\n\n加载数据ZeiselBrainData：工作流第2章library(scRNAseq)\nsce.zeisel &lt;- ZeiselBrainData()\nsce.zeisel\n#&gt; class: SingleCellExperiment \n#&gt; dim: 20006 3005 \n#&gt; metadata(0):\n#&gt; assays(1): counts\n#&gt; rownames(20006): Tspan12 Tshz1 ... mt-Rnr1 mt-Nd4l\n#&gt; rowData names(1): featureType\n#&gt; colnames(3005): 1772071015_C02 1772071017_G12 ... 1772066098_A12\n#&gt;   1772058148_F03\n#&gt; colData names(10): tissue group # ... level1class level2class\n#&gt; reducedDimNames(0):\n#&gt; mainExpName: endogenous\n#&gt; altExpNames(2): ERCC repeat\n\nlibrary(scater)\nsce.zeisel &lt;- aggregateAcrossFeatures(sce.zeisel, \n    id=sub(\"_loc[0-9]+$\", \"\", rownames(sce.zeisel)))\n\n#--- gene-annotation ---#\nlibrary(org.Mm.eg.db)\nrowData(sce.zeisel)$Ensembl &lt;- mapIds(org.Mm.eg.db, \n    keys=rownames(sce.zeisel), keytype=\"SYMBOL\", column=\"ENSEMBL\")\n\n\n\nCodesce.zeisel &lt;- addPerCellQC(\n  sce.zeisel,subsets=list(Mt=rowData(sce.zeisel)$featureType==\"mito\"))\n\nqc &lt;- quickPerCellQC(colData(sce.zeisel), \n    sub.fields=c(\"altexps_ERCC_percent\", \"subsets_Mt_percent\"))\nsce.zeisel$discard &lt;- qc$discard\n\nplotColData(sce.zeisel, x=\"sum\", y=\"subsets_Mt_percent\", colour_by=\"discard\")\n\n\n\n图 5.2: Zeisel 大脑数据集 中分配给线粒体转录本的 UMI 百分比，与 UMI 总数作图。每个点代表一个细胞，并根据它是否被视为低质量并丢弃进行着色。\n\n\n\n\nCodeplotColData(sce.zeisel, x=\"altexps_ERCC_percent\", y=\"subsets_Mt_percent\",\n    colour_by=\"discard\")\n\n\n\n图 5.3: Zeisel 大脑数据集中分配给线粒体转录本的 UMI 百分比,与分配给加标转录本的UMI百分比作图。每个点代表一个细胞，并根据它是否被视为低质量并丢弃进行着色。"
  },
  {
    "objectID": "QC.html#去除劣质细胞",
    "href": "QC.html#去除劣质细胞",
    "title": "\n5  质量控制\n",
    "section": "\n5.4 去除劣质细胞",
    "text": "5.4 去除劣质细胞\n对于常规分析，删除\n\nCodefiltered &lt;- sce.416b[,!reasons$discard]\n\n\n标记\n\nCodemarked &lt;- sce.416b\nmarked$discard &lt;- reasons$discard"
  },
  {
    "objectID": "normalization.html#库大小归一化",
    "href": "normalization.html#库大小归一化",
    "title": "\n6  Normalization\n",
    "section": "\n6.1 库大小归一化",
    "text": "6.1 库大小归一化\n库大小归一化是执行缩放归一化的最简单策略。我们将文库大小定义为每个细胞所有基因的计数总和，假设其期望值随任何细胞特异性偏差而缩放。然后，每个细胞的”文库大小因子”与其文库大小成正比，其中定义了比例常数，使得所有单元的平均大小因子等于 1。 此定义可确保归一化表达式值与原始计数的比例相同，这对于解释很有用， 尤其是在处理转换后的数据。\n\nCodelibrary(scater)\nlib.sf.zeisel &lt;- librarySizeFactors(sce.zeisel)\nsummary(lib.sf.zeisel)\n#&gt;    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#&gt;  0.1757  0.5680  0.8680  1.0000  1.2783  4.0839\n\n\n在Zeisel大脑数据中，细胞库大小因子在细胞之间相差多达 10 倍 图 6.1 。\n\nCodehist(log10(lib.sf.zeisel), xlab=\"Log10[Size factor]\", col='grey80')\n\n\n\n图 6.1: Zeisel 大脑数据集中从文库大小得出的缩放因子分布"
  },
  {
    "objectID": "normalization.html#反卷积归一化-normalization-by-deconvolution",
    "href": "normalization.html#反卷积归一化-normalization-by-deconvolution",
    "title": "\n6  Normalization\n",
    "section": "\n6.2 反卷积归一化 Normalization by deconvolution",
    "text": "6.2 反卷积归一化 Normalization by deconvolution\n当样本之间存在任何不平衡的差异表达（ differential expression）时，就会出现成分偏差。消除成分偏差是批量RNA测序数据分析中一个经过充分研究的问题。可以使用 DESeq2 包中的函数estimateSizeFactorsFromMatrix()或 edgeR 包中的函数calcNormFactors()执行归一化。假设细胞之间大多数基因并非差异表达，假设两个细胞之间非DE多数基因的计数大小的任何系统性差异代表用于计算其去除的适当大小因子的偏差。\n然而，由于低计数和零计数占主导地位，单细胞数据对于这些批量归一化方法来说可能是个问题。Pool-based size factors are then “deconvolved” into cell-based factors for normalization of each cell’s expression profile.基于类的大小因子”去卷积”为基于细胞的大小因子，以标准化每个细胞的表达谱。这是使用 scran 中的函数calculateSumFactors()执行的，如下所示。\n\nCodelibrary(scran)\nset.seed(100)\nclust.zeisel &lt;- quickCluster(sce.zeisel) \ntable(clust.zeisel)\n#&gt; clust.zeisel\n#&gt;   1   2   3   4   5   6   7   8   9  10  11  12  13  14 \n#&gt; 170 254 441 178 393 148 219 240 189 123 112 103 135 111\n\n\n我们使用预聚类步骤quickCluster()，其中每个聚类中的细胞被单独归一化，并且大小因子被重新缩放以在聚类之间具有可比性。\n\nCodedeconv.sf.zeisel &lt;- calculateSumFactors(sce.zeisel, cluster=clust.zeisel)\nsummary(deconv.sf.zeisel)\n#&gt;    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#&gt;  0.1186  0.4860  0.8314  1.0000  1.3209  4.5090\n\n\n我们看到 图 6.2 反卷积大小因子表现出与库大小因子细胞特定类型的偏差。\n\nCodetibble(x=lib.sf.zeisel, y=deconv.sf.zeisel) |&gt; \n  ggplot(aes(x,y))+\n  scale_x_log10()+\n  scale_y_log10()+\n  geom_point(color=as.integer(factor(sce.zeisel$level1class)))+\n  geom_abline(slope = 1,intercept = 0,color=\"red\",linewidth=1.5)+\n  xlab(\"Library size factor\")+\n  ylab(\"Deconvolution size factor\")\n\n\n\n图 6.2: Zeisel 大脑数据集中每个细胞的反卷积大小因子，与从文库大小得出的等效大小因子进行比较。红线对应于两个大小因子之间的同一性。"
  },
  {
    "objectID": "normalization.html#normalization-by-spike-ins",
    "href": "normalization.html#normalization-by-spike-ins",
    "title": "\n6  Normalization\n",
    "section": "\n6.3 Normalization by spike-ins",
    "text": "6.3 Normalization by spike-ins\n加标归一化基于向每个细胞中添加相同数量的加标 RNA 的假设. 加标转录本覆盖率的系统性差异只能归因于细胞特异性偏差，如捕获效率或测序深度。 为了消除这些偏差，我们通过缩放”spike-in大小因子”均衡细胞之间的spike-in覆盖率。\n与之前的方法相比，加标归一化不需要对系统的生物学特性进行假设（即，缺乏许多DE基因）。 相反，它假设spike-in转录本 （i） 以恒定水平添加到每个细胞中，并且 （ii） 以与内源性基因相同的相对方式对偏差做出反应。\n实际上，如果对单个细胞的总RNA含量的差异感兴趣，并且必须在下游分析中保留，则应使用加标归一化。 对于给定的细胞，其内源性RNA总量的增加不会增加其spike-in大小因子。 这确保了总RNA含量对整个群体表达的影响不会在放大时被消除。 相比之下，上述其他归一化方法将简单地将总RNA含量的任何变化解释为偏倚的一部分并将其消除。\n\nCodelibrary(scRNAseq)\nlibrary(ensembldb)\nsce.richard &lt;- RichardTCellData()\nsce.richard &lt;- sce.richard[,sce.richard$`single cell quality`==\"OK\"]\nsce.richard\n#&gt; class: SingleCellExperiment \n#&gt; dim: 46603 528 \n#&gt; metadata(0):\n#&gt; assays(1): counts\n#&gt; rownames(46603): ENSMUSG00000102693 ENSMUSG00000064842 ...\n#&gt;   ENSMUSG00000096730 ENSMUSG00000095742\n#&gt; rowData names(0):\n#&gt; colnames(528): SLX-12611.N701_S502. SLX-12611.N702_S502. ...\n#&gt;   SLX-12612.i712_i522. SLX-12612.i714_i522.\n#&gt; colData names(13): age individual ... stimulus time\n#&gt; reducedDimNames(0):\n#&gt; mainExpName: endogenous\n#&gt; altExpNames(1): ERCC\n\n\n\nCodesce.richard &lt;- computeSpikeFactors(sce.richard, \"ERCC\")\nsummary(sizeFactors(sce.richard))\n#&gt;    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#&gt;  0.1247  0.4282  0.6274  1.0000  1.0699 23.3161\n\n\n\nCodedata.frame(\n    DeconvFactor=calculateSumFactors(sce.richard),\n    SpikeFactor=sizeFactors(sce.richard),\n    Stimulus=sce.richard$stimulus, \n    Time=sce.richard$time\n) |&gt; \nggplot(aes(x=DeconvFactor, y=SpikeFactor, color=Time)) +\n    geom_point() + facet_wrap(~Stimulus) + scale_x_log10() + \n    scale_y_log10() + geom_abline(intercept=0, slope=1, color=\"red\")\n\n\n\n图 6.3: 来自加标归一化的大小因子，与 T 细胞数据集中所有细胞的文库大小因子作图。每个图代表不同的配体处理，每个点都是一个细胞，根据刺激的时间着色。\n\n\n\n我们观察到每个处理条件下的加标大小因子和反卷积大小因子之间存在正相关关系（图 6.3），表明它们在测序深度和捕获效率方面捕获了类似的技术偏差。 然而，我们还观察到，增加对 T 细胞受体的刺激 - 就亲和力或时间增加而言 - 导致相对于文库大小因子的加标因子降低。 这与刺激过程中生物合成活性和总RNA含量的增加一致，这降低了每个文库中的相对峰值覆盖率（从而降低了加标大小因子），但增加了内源性基因的覆盖率（从而增加了文库大小因子）。\n这两组大小因子之间的差异对下游解释有实际影响。 如果将加标大小因子应用于计数，则未刺激细胞中的表达值将放大，而刺激细胞中的表达将缩小。 但是，如果使用反卷积大小因子，则会出现相反的情况。 当我们在归一化策略之间切换时，这可能表现为不同条件之间 DE 的大小和方向的变化，如 图 6.4 所示\n\nCodesce.richard.deconv &lt;- logNormCounts(sce.richard, size_factors=calculateSumFactors(sce.richard))\nsce.richard.spike &lt;- logNormCounts(sce.richard, size_factors=sizeFactors(sce.richard))\n\ngridExtra::grid.arrange(\n    plotExpression(sce.richard.deconv, x=\"stimulus\", \n        colour_by=\"time\", features=\"ENSMUSG00000092341\") + \n        theme(axis.text.x = element_text(angle = 90)) + \n        ggtitle(\"After deconvolution\"),\n    plotExpression(sce.richard.spike, x=\"stimulus\", \n        colour_by=\"time\", features=\"ENSMUSG00000092341\") + \n        theme(axis.text.x = element_text(angle = 90)) +\n        ggtitle(\"After spike-in normalization\"),\n    ncol=2\n)\n\n\n\n图 6.4: 使用反卷积大小因子（左）或峰值大小因子（右）进行归一化后 Malat1 的对数归一化表达值分布。细胞按配体亲和力分层，并按刺激后的时间着色\n\n\n\n总RNA含量是否相关，因此，归一化策略的选择取决于生物学假设。 在大多数情况下，总RNA含量的变化并不有趣，可以通过应用文库大小或反卷积因子来归一化。 然而，如果总RNA的差异与感兴趣的生物学过程有关，例如细胞周期活性或T细胞活化，这可能并不总是合适的。 峰值归一化将保留这些差异，以便生物组之间表达的任何变化都具有正确的符号。\n然而！无论我们是否关心总RNA含量，使用加标大小因子对加标转录本进行归一化至关重要。 从内源性基因计数计算的大小因子不应应用于刺突转录本，正是因为前者捕获了后者没有经历过的总 RNA 含量差异。 尝试使用基于基因的大小因子对加标计数进行归一化将导致过度归一化和不正确的定量。 因此，如果需要归一化的加标数据，我们必须为加标转录本计算一组单独的大小因子;这是由 modelGeneVarWithSpikes()等函数自动执行的。"
  },
  {
    "objectID": "normalization.html#缩放和对数变换",
    "href": "normalization.html#缩放和对数变换",
    "title": "\n6  Normalization\n",
    "section": "\n6.4 缩放和对数变换",
    "text": "6.4 缩放和对数变换\nThe log-transformation is useful as differences in the log-values represent log-fold changes in expression. 这在基于欧几里得距离的下游过程中非常重要，其中包括多种形式的聚类和降维。 通过对数转换数据进行操作，我们确保这些程序根据表达的对数折叠变化测量细胞之间的距离。\n\nCodeset.seed(100)\nclust.zeisel &lt;- quickCluster(sce.zeisel) \nsce.zeisel &lt;- computeSumFactors(sce.zeisel, cluster=clust.zeisel, min.mean=0.1)\nsce.zeisel &lt;- logNormCounts(sce.zeisel)\nassayNames(sce.zeisel)\n#&gt; [1] \"counts\"    \"logcounts\""
  },
  {
    "objectID": "Seurat.html",
    "href": "Seurat.html",
    "title": "\n8  Seurat\n",
    "section": "",
    "text": "Seurat5.0.1\n\nCode# install.packages('Seurat')\nlibrary(Seurat)"
  }
]